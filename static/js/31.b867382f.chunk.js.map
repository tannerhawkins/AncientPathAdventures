{"version":3,"sources":["pages/Teacher/Module/CreateModule.js"],"names":["StyledBody","styled","div","Constants","HEADER_HEIGHT","SIDEBAR_WIDTH","StyledTitle","p","StyledParagraph","StyledButtonContainer","StepsContainer","StyledFlexContainer","StyledForm","form","StyledInput","input","StyledSubmitButton","Button","COLOR","DARK_GREEN","StyledAddStepButton","StyledDashboardButton","LIGHT_GREEN","StyledError","StyledText","CreateModule","history","useHistory","dispatch","useDispatch","showAddStepPopup","setShowAddStepPopup","useState","errorMessage","setErrorMessage","selectedModule","useSelector","selectSelectedModule","steps","selectSteps","currentClass","selectCurrentClass","useEffect","title","description","style","display","onClose","id","type","name","defaultValue","required","onClick","setTitle","document","getElementById","value","setDescription","data","Object","values","forms","moduleForm","filter","item","reduce","obj","field","toAdd","creator","auth","currentUser","uid","studentsToAssign","students","length","modulesDb","doc","mid","update","then","userDataDb","get","newModuleList","moduleList","mod","result","signIn","push","add","firebase","firestore","FieldValue","arrayUnion","classDataDb","cid","modules","setCurrentClass","forEach","student","classdoc","classList","oldClass","cla","newClass","index","i","getIndex","splice"],"mappings":"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","file":"static/js/31.b867382f.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Main from \"../../../layouts/Main\";\nimport SideBar from \"../../../components/Template/SideBar\";\nimport Header from \"../../../components/Teacher/Header\";\nimport styled from \"styled-components\";\nimport { Constants } from \"../../../data/constants\";\nimport {\n  auth,\n  classDataDb,\n  modulesDb,\n  userDataDb,\n} from \"../../../data/firebase\";\nimport firebase from \"firebase\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"../../../components/Template/Button\";\nimport DragAndDrop from \"../../../components/Teacher/DragAndDrop\";\nimport AddStepPopup from \"../../../components/Teacher/Popups/AddStepPopup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectSelectedModule,\n  selectSteps,\n} from \"../../../app/module/selectors\";\nimport { selectCurrentClass } from \"../../../app/class/selectors\";\nimport { setCurrentClass } from \"../../../app/class/actions\";\nimport { setDescription, setTitle } from \"../../../app/module/actions\";\nimport { signIn } from \"../../../app/account/actions\";\n\nconst CreateModule = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [showAddStepPopup, setShowAddStepPopup] = useState(false);\n  const [errorMessage, setErrorMessage] = useState();\n  const selectedModule = useSelector(selectSelectedModule);\n  const steps = useSelector(selectSteps);\n  const currentClass = useSelector(selectCurrentClass);\n\n  useEffect(() => {}, [steps]);\n\n  const handleSubmit = () => {\n    setErrorMessage();\n\n    // get form data\n    const data = Object.values(document.forms.moduleForm)\n      .filter((item) => item.name)\n      .reduce((obj, field) => {\n        obj[field.name] = field.value;\n        return obj;\n      }, {});\n    const toAdd = {\n      ...selectedModule,\n      title: data.title,\n      description: data.description,\n      creator: auth.currentUser.uid,\n    };\n\n    // currently assigns all students but this is subject to change\n    const studentsToAssign = currentClass.students;\n\n    if (data[\"title\"] === \"\") {\n      setErrorMessage(\"Please fill out module title\");\n      return;\n    }\n    if (steps.length === 0) {\n      setErrorMessage(\"Please add at least one step\");\n      return;\n    }\n\n    if (selectedModule.creator) {\n      modulesDb\n        .doc(selectedModule.mid)\n        .update(toAdd)\n        .then(() => {\n          userDataDb\n            .doc(auth.currentUser.uid)\n            .get()\n            .then((doc) => {\n              const newModuleList = doc\n                .data()\n                .moduleList.filter((mod) => mod.mid !== selectedModule.mid);\n              userDataDb.doc(auth.currentUser.uid).update({\n                moduleList: [\n                  ...newModuleList,\n                  {\n                    mid: toAdd.mid,\n                    title: data.title,\n                    description: data.description,\n                  },\n                ],\n              });\n            })\n            .then(() => {\n              userDataDb\n                .doc(auth.currentUser.uid)\n                .get()\n                .then((result) => dispatch(signIn(result.data())));\n            });\n        })\n        .then(() => {\n          userDataDb\n            .doc(auth.currentUser.uid)\n            .get()\n            .then((data) => dispatch(signIn(data.data())));\n          history.push(\"teacher/home\");\n        });\n    } else {\n      modulesDb\n        .add(toAdd)\n        .then((doc) => {\n          modulesDb.doc(doc.id).update({ mid: doc.id });\n          userDataDb\n            .doc(auth.currentUser.uid)\n            .update({\n              moduleList: firebase.firestore.FieldValue.arrayUnion({\n                mid: doc.id,\n                title: data.title,\n                description: data.description,\n              }),\n            })\n            .then(() => {\n              classDataDb\n                .doc(currentClass.cid)\n                .update({\n                  modules: firebase.firestore.FieldValue.arrayUnion(doc.id),\n                })\n                .then(\n                  classDataDb\n                    .doc(currentClass?.cid)\n                    .get()\n                    .then((doc) => dispatch(setCurrentClass(doc.data())))\n                )\n                .then(() => {\n                  studentsToAssign.forEach((student) => {\n                    userDataDb\n                      .doc(student.uid)\n                      .get()\n                      .then((classdoc) => {\n                        const classList = classdoc.data().classList;\n                        const oldClass = classList.filter(\n                          (cla) => cla.cid === currentClass.cid\n                        )[0];\n                        const newClass = {\n                          ...oldClass,\n                          modules: [...oldClass.modules, doc.id],\n                        };\n                        const getIndex = () => {\n                          for (let i = 0; i < classList.length; i++) {\n                            if (classList[i].cid === oldClass.cid) {\n                              return i;\n                            }\n                          }\n                          return -1;\n                        };\n                        const index = getIndex();\n                        classList.splice(index, 1, newClass);\n                        userDataDb.doc(student.uid).update({\n                          classList: classList,\n                        });\n                      });\n                    userDataDb\n                      .doc(auth.currentUser.uid)\n                      .get()\n                      .then((result) => dispatch(signIn(result.data())));\n                  });\n                });\n            });\n        })\n        .then(() => {\n          userDataDb\n            .doc(auth.currentUser.uid)\n            .get()\n            .then((data) => dispatch(signIn(data.data())));\n          history.push(\"teacher/home\");\n        });\n    }\n    return;\n  };\n\n  // Likely should have a field for Title, description, and some kind of interface for adding\n  // \"steps\" to the module. These steps would be things like text, video, and quizzes.\n  // Then there needs to be a way to modify these steps with the information desired.\n  // Should be an option to make module private or public\n  // Should probably have an option to ask which students to assign to\n  // These options should include none, all, and the ability to select students individually\n  // FOR NOW DONT INCLUDE THESE OPTIONS, THIS IS SOMETHING THAT CAN BE ADDED LATER\n  return (\n    <Main title={\"Create a Module\"} description={\"Create a Module\"}>\n      <SideBar />\n      <Header />\n      <AddStepPopup\n        style={{ display: showAddStepPopup ? \"flex\" : \"none\" }}\n        onClose={() => setShowAddStepPopup(false)}\n      />\n      <StyledBody>\n        <StyledTitle>Create New Module</StyledTitle>\n        <StyledParagraph>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce ac\n          purus eget lacus pellentesque consequat. Donec commodo tincidunt\n          lorem, c ursus accumsan eros varius vel.\n        </StyledParagraph>\n        <StyledForm id=\"moduleForm\">\n          <StyledText>Module Title</StyledText>\n          <StyledInput\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            defaultValue={selectedModule?.title}\n            data-test=\"title\"\n            required\n          />\n          <StyledText>Module Description</StyledText>\n          <StyledInput\n            type=\"text\"\n            id=\"description\"\n            name=\"description\"\n            data-test=\"description\"\n            defaultValue={selectedModule?.description}\n          />\n          <StyledFlexContainer>\n            <StyledText>Steps - Drag to Change Order</StyledText>\n            <StyledAddStepButton\n              onClick={() => {\n                dispatch(setTitle(document.getElementById(\"title\").value));\n                dispatch(\n                  setDescription(document.getElementById(\"description\").value)\n                );\n                setShowAddStepPopup(true);\n              }}\n              data-test=\"add-step\"\n            >\n              Add Step\n            </StyledAddStepButton>\n          </StyledFlexContainer>\n          <StepsContainer>\n            <DragAndDrop steps={steps} />\n          </StepsContainer>\n          <StyledError>{errorMessage}</StyledError>\n          <StyledButtonContainer>\n            <StyledSubmitButton onClick={handleSubmit} data-test=\"create\">\n              CREATE\n            </StyledSubmitButton>\n            <StyledDashboardButton onClick={() => history.push(`teacher/home`)}>\n              BACK TO DASHBOARD\n            </StyledDashboardButton>\n          </StyledButtonContainer>\n        </StyledForm>\n      </StyledBody>\n    </Main>\n  );\n};\n\nconst StyledBody = styled.div`\n  margin-top: ${Constants.HEADER_HEIGHT};\n  margin-left: ${Constants.SIDEBAR_WIDTH};\n  padding: 10px 50px;\n`;\n\nconst StyledTitle = styled.p`\n  line-height: 36px;\n  font-size: 30px;\n  font-weight: 600;\n`;\n\nconst StyledParagraph = styled.p`\n  font-size: 20px;\n`;\n\nconst StyledButtonContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst StepsContainer = styled.div``;\n\nconst StyledFlexContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  outline: none;\n  width: 90%;\n  max-width: 600px;\n  margin-top: 60px;\n`;\n\nconst StyledInput = styled.input`\n  border: none;\n  border-bottom: 1px solid black;\n  height: 60px;\n  margin-bottom: 70px;\n  font-size: 30px;\n  outline: none;\n`;\n\nconst StyledSubmitButton = styled(Button)`\n  font-size: 25px;\n  height: 70px;\n  padding: 0 5px;\n  min-width: 120px;\n  background-color: ${Constants.COLOR.DARK_GREEN};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledAddStepButton = styled(StyledSubmitButton)``;\n\nconst StyledDashboardButton = styled(Button)`\n  font-size: 15px;\n  height: 50px;\n  padding: 0 5px;\n  min-width: 120px;\n  background-color: ${Constants.COLOR.LIGHT_GREEN};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledError = styled.p`\n  color: red;\n  margin-top: -20px;\n`;\n\nconst StyledText = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n  margin: 0;\n`;\n\nexport default CreateModule;\n"],"sourceRoot":""}