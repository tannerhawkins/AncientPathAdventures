{"version":3,"sources":["pages/Teacher/Module/Steps/EditQuiz.js"],"names":["StyledBody","styled","div","Constants","HEADER_HEIGHT","SIDEBAR_WIDTH","StyledQuiz","COLOR","DARK_GREEN","StyledAddQuestionButton","Button","GREEN","StyledSubmitButton","StyledSectionTitle","p","EditQuiz","dispatch","useDispatch","history","useHistory","step","useSelector","selectSelectedStep","questions","setQuestions","useState","data","showEditQuestion","setShowEditQuestion","id","selectNextID","steps","selectSteps","title","description","onClick","onSubmit","map","question","currentQuestion","indexOf","inEdit","length","undefined","updateStep","type","order","addStep","push"],"mappings":"iIAAA,0HAkBA,MA6EMA,EAAaC,IAAOC,GAAI;gBACdC,IAAUC;iBACTD,IAAUE;;EAIrBC,EAAaL,IAAOC,GAAI;sBACRC,IAAUI,MAAMC;;;;;;;;;;;EAahCC,EAA0BR,YAAOS,IAAQ;;;;sBAIzBP,IAAUI,MAAMI;;;;EAMhCC,EAAqBX,YAAOS,IAAQ;;;;sBAIpBP,IAAUI,MAAMC;EAGhCK,EAAqBZ,IAAOa,CAAE;;;;EAMrBC,UAxHE,KACf,MAAMC,EAAWC,cACXC,EAAUC,cACVC,EAAOC,YAAYC,MAClBC,EAAWC,GAAgBC,oBAC5B,OAAJL,QAAI,IAAJA,OAAA,EAAAA,EAAMM,MAAON,EAAKM,KAAKH,UAAY,KAE9BI,EAAkBC,GAAuBH,oBAAS,GACnDI,EAAKR,YAAYS,KACjBC,EAAQV,YAAYW,KAkC1B,OACE,eAAC,IAAD,CAAMC,MAAO,iBAAkBC,YAAa,iBAA5C,UACE,cAAC,IAAD,IACA,cAAC,IAAD,IACA,eAAClC,EAAD,WACE,cAACa,EAAD,wBACA,cAACJ,EAAD,CACE0B,QAAS,IAAMP,GAAoB,GACnC,YAAU,eAFZ,0BAMCD,GACC,cAAC,IAAD,CAAkBS,SA7CLb,IACnBC,EAAaD,GACbK,GAAoB,IA2C2BL,UAAWA,IAErDA,EAAUc,KAAKC,GACd,cAAChC,EAAD,UACE,cAAC,IAAD,CACEiB,UAAWA,EACXgB,gBAAiBhB,EAAUiB,QAAQF,GACnCG,QAAQ,KAJKlB,EAAUiB,QAAQF,MAQhB,GAApBf,EAAUmB,QACT,cAAC9B,EAAD,CAAoBuB,QApDX,KAEbnB,OADW2B,IAATvB,EAEAwB,YAAW,CACTC,KAAM,OACNC,MAAO1B,EAAK0B,MACZjB,GAAIT,EAAKS,GACTH,KAAM,CACJH,UAAWA,KAMfwB,YAAQ,CACNF,KAAM,OACNC,MAAOf,EAAMW,OACbb,GAAIA,EACJH,KAAM,CACJH,UAAWA,MAKnBL,EAAQ8B,KAAM,2BA4B+B,YAAU,SAAjD","file":"static/js/32.2ba12f5b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Main from \"../../../../layouts/Main\";\nimport SideBar from \"../../../../components/Template/SideBar\";\nimport Header from \"../../../../components/Teacher/Header\";\nimport styled from \"styled-components\";\nimport { Constants } from \"../../../../data/constants\";\nimport Button from \"../../../../components/Template/Button\";\nimport EditQuestionCard from \"../../../../components/Template/EditQuestionCard\";\nimport QuestionCard from \"../../../../components/Template/QuestionCard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { addStep, updateStep } from \"../../../../app/module/actions\";\nimport {\n  selectNextID,\n  selectSelectedStep,\n  selectSteps,\n} from \"../../../../app/module/selectors\";\n\nconst EditQuiz = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const step = useSelector(selectSelectedStep);\n  const [questions, setQuestions] = useState(\n    step?.data ? step.data.questions : []\n  );\n  const [showEditQuestion, setShowEditQuestion] = useState(false);\n  const id = useSelector(selectNextID);\n  const steps = useSelector(selectSteps);\n\n  const addQuestion = (questions) => {\n    setQuestions(questions);\n    setShowEditQuestion(false);\n  };\n\n  const onSubmit = () => {\n    if (step !== undefined) {\n      dispatch(\n        updateStep({\n          type: \"quiz\",\n          order: step.order,\n          id: step.id,\n          data: {\n            questions: questions,\n          },\n        })\n      );\n    } else {\n      dispatch(\n        addStep({\n          type: \"quiz\",\n          order: steps.length,\n          id: id,\n          data: {\n            questions: questions,\n          },\n        })\n      );\n    }\n    history.push(`/teacher/create-module`);\n  };\n\n  return (\n    <Main title={\"Edit Quiz Step\"} description={\"Edit Quiz Step\"}>\n      <SideBar />\n      <Header />\n      <StyledBody>\n        <StyledSectionTitle>Edit Quiz</StyledSectionTitle>\n        <StyledAddQuestionButton\n          onClick={() => setShowEditQuestion(true)}\n          data-test=\"add-question\"\n        >\n          Add Question\n        </StyledAddQuestionButton>\n        {showEditQuestion && (\n          <EditQuestionCard onSubmit={addQuestion} questions={questions} />\n        )}\n        {questions.map((question) => (\n          <StyledQuiz key={questions.indexOf(question)}>\n            <QuestionCard\n              questions={questions}\n              currentQuestion={questions.indexOf(question)}\n              inEdit={true}\n            />\n          </StyledQuiz>\n        ))}\n        {questions.length != 0 && (\n          <StyledSubmitButton onClick={onSubmit} data-test=\"submit\">\n            Submit\n          </StyledSubmitButton>\n        )}\n      </StyledBody>\n    </Main>\n  );\n};\n\nconst StyledBody = styled.div`\n  margin-top: ${Constants.HEADER_HEIGHT};\n  margin-left: ${Constants.SIDEBAR_WIDTH};\n  padding: 0 50px;\n`;\n\nconst StyledQuiz = styled.div`\n  background-color: ${Constants.COLOR.DARK_GREEN};\n  width: 80%;\n  min-height: 200px;\n  height: 600px;\n  border-radius: 15px;\n  box-sizing: border-box;\n  padding: 20px;\n  margin-top: 40px;\n  box-shadow: 10px 10px 42px 0px rgba(0, 0, 0, 0.75);\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nconst StyledAddQuestionButton = styled(Button)`\n  height: 60px;\n  width: 130px;\n  margin-top: 40px;\n  background-color: ${Constants.COLOR.GREEN};\n  border-radius: 40px;\n  position: absolute;\n  right: 50px;\n`;\n\nconst StyledSubmitButton = styled(Button)`\n  height: 60px;\n  width: 130px;\n  margin-top: 40px;\n  background-color: ${Constants.COLOR.DARK_GREEN};\n`;\n\nconst StyledSectionTitle = styled.p`\n  font-size: 36px;\n  line-height: 43px;\n  font-weight: 500;\n`;\n\nexport default EditQuiz;\n"],"sourceRoot":""}