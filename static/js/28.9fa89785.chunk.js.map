{"version":3,"sources":["pages/Admin/Module/CreateModule.js"],"names":["StyledBody","styled","div","Constants","HEADER_HEIGHT","SIDEBAR_WIDTH","StyledTitle","p","StyledParagraph","StyledButtonContainer","StepsContainer","StyledFlexContainer","StyledForm","form","StyledInput","input","StyledSubmitButton","Button","COLOR","DARK_GREEN","StyledAddStepButton","StyledDashboardButton","LIGHT_GREEN","StyledError","StyledText","CreateModule","history","useHistory","dispatch","useDispatch","showAddStepPopup","setShowAddStepPopup","useState","errorMessage","setErrorMessage","selectedModule","useSelector","selectSelectedModule","steps","selectSteps","useEffect","title","description","style","display","onClose","id","type","name","defaultValue","required","onClick","setTitle","document","getElementById","value","setDescription","data","Object","values","forms","moduleForm","filter","item","reduce","obj","field","toAdd","creator","auth","currentUser","uid","length","apaModulesDb","doc","mid","update","then","userDataDb","get","newModuleList","moduleList","mod","result","signIn","push","add","firebase","firestore","FieldValue","arrayUnion"],"mappings":"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","file":"static/js/28.9fa89785.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Main from \"../../../layouts/Main\";\nimport SideBar from \"../../../components/Template/SideBar\";\nimport Header from \"../../../components/Teacher/Header\";\nimport styled from \"styled-components\";\nimport { Constants } from \"../../../data/constants\";\nimport { auth, apaModulesDb, userDataDb } from \"../../../data/firebase\";\nimport firebase from \"firebase\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"../../../components/Template/Button\";\nimport DragAndDrop from \"../../../components/Teacher/DragAndDrop\";\nimport AddStepPopup from \"../../../components/Teacher/Popups/AddStepPopup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectSelectedModule,\n  selectSteps,\n} from \"../../../app/module/selectors\";\nimport { setDescription, setTitle } from \"../../../app/module/actions\";\nimport { signIn } from \"../../../app/account/actions\";\n\nconst CreateModule = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [showAddStepPopup, setShowAddStepPopup] = useState(false);\n  const [errorMessage, setErrorMessage] = useState();\n  const selectedModule = useSelector(selectSelectedModule);\n  const steps = useSelector(selectSteps);\n\n  useEffect(() => {}, [steps]);\n\n  const handleSubmit = () => {\n    setErrorMessage();\n\n    // get form data\n    const data = Object.values(document.forms.moduleForm)\n      .filter((item) => item.name)\n      .reduce((obj, field) => {\n        obj[field.name] = field.value;\n        return obj;\n      }, {});\n    const toAdd = {\n      ...selectedModule,\n      title: data.title,\n      description: data.description,\n      creator: auth.currentUser.uid,\n    };\n\n    if (data[\"title\"] === \"\") {\n      setErrorMessage(\"Please fill out module title\");\n      return;\n    }\n    if (steps.length === 0) {\n      setErrorMessage(\"Please add at least one step\");\n      return;\n    }\n\n    if (selectedModule.creator) {\n      apaModulesDb\n        .doc(selectedModule.mid)\n        .update(toAdd)\n        .then(() => {\n          userDataDb\n            .doc(auth.currentUser.uid)\n            .get()\n            .then((doc) => {\n              const newModuleList = doc\n                .data()\n                .moduleList.filter((mod) => mod.mid !== selectedModule.mid);\n              userDataDb.doc(auth.currentUser.uid).update({\n                moduleList: [\n                  ...newModuleList,\n                  {\n                    mid: toAdd.mid,\n                    title: data.title,\n                    description: data.description,\n                  },\n                ],\n              });\n            })\n            .then(() => {\n              userDataDb\n                .doc(auth.currentUser.uid)\n                .get()\n                .then((result) => dispatch(signIn(result.data())));\n            });\n        })\n        .then(() => {\n          userDataDb\n            .doc(auth.currentUser.uid)\n            .get()\n            .then((data) => dispatch(signIn(data.data())));\n          history.push(\"admin/home\");\n        });\n    } else {\n      apaModulesDb\n        .add(toAdd)\n        .then((doc) => {\n          apaModulesDb.doc(doc.id).update({ mid: doc.id });\n          userDataDb.doc(auth.currentUser.uid).update({\n            moduleList: firebase.firestore.FieldValue.arrayUnion({\n              mid: doc.id,\n              title: data.title,\n              description: data.description,\n            }),\n          });\n        })\n        .then(() => {\n          userDataDb\n            .doc(auth.currentUser.uid)\n            .get()\n            .then((data) => dispatch(signIn(data.data())));\n          history.push(\"admin/home\");\n        });\n    }\n    return;\n  };\n\n  // Likely should have a field for Title, description, and some kind of interface for adding\n  // \"steps\" to the module. These steps would be things like text, video, and quizzes.\n  // Then there needs to be a way to modify these steps with the information desired.\n  // Should be an option to make module private or public\n  // Should probably have an option to ask which students to assign to\n  // These options should include none, all, and the ability to select students individually\n  // FOR NOW DONT INCLUDE THESE OPTIONS, THIS IS SOMETHING THAT CAN BE ADDED LATER\n  return (\n    <Main title={\"Create a Module\"} description={\"Create a Module\"}>\n      <SideBar />\n      <Header />\n      <AddStepPopup\n        style={{ display: showAddStepPopup ? \"flex\" : \"none\" }}\n        onClose={() => setShowAddStepPopup(false)}\n      />\n      <StyledBody>\n        <StyledTitle>Create New Module</StyledTitle>\n        <StyledParagraph>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce ac\n          purus eget lacus pellentesque consequat. Donec commodo tincidunt\n          lorem, c ursus accumsan eros varius vel.\n        </StyledParagraph>\n        <StyledForm id=\"moduleForm\">\n          <StyledText>Module Title</StyledText>\n          <StyledInput\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            defaultValue={selectedModule?.title}\n            data-test=\"title\"\n            required\n          />\n          <StyledText>Module Description</StyledText>\n          <StyledInput\n            type=\"text\"\n            id=\"description\"\n            name=\"description\"\n            data-test=\"description\"\n            defaultValue={selectedModule?.description}\n          />\n          <StyledFlexContainer>\n            <StyledText>Steps - Drag to Change Order</StyledText>\n            <StyledAddStepButton\n              onClick={() => {\n                dispatch(setTitle(document.getElementById(\"title\").value));\n                dispatch(\n                  setDescription(document.getElementById(\"description\").value)\n                );\n                setShowAddStepPopup(true);\n              }}\n              data-test=\"add-step\"\n            >\n              Add Step\n            </StyledAddStepButton>\n          </StyledFlexContainer>\n          <StepsContainer>\n            <DragAndDrop steps={steps} />\n          </StepsContainer>\n          <StyledError>{errorMessage}</StyledError>\n          <StyledButtonContainer>\n            <StyledSubmitButton onClick={handleSubmit} data-test=\"create\">\n              CREATE\n            </StyledSubmitButton>\n            <StyledDashboardButton onClick={() => history.push(`admin/home`)}>\n              BACK TO DASHBOARD\n            </StyledDashboardButton>\n          </StyledButtonContainer>\n        </StyledForm>\n      </StyledBody>\n    </Main>\n  );\n};\n\nconst StyledBody = styled.div`\n  margin-top: ${Constants.HEADER_HEIGHT};\n  margin-left: ${Constants.SIDEBAR_WIDTH};\n  padding: 10px 50px;\n`;\n\nconst StyledTitle = styled.p`\n  line-height: 36px;\n  font-size: 30px;\n  font-weight: 600;\n`;\n\nconst StyledParagraph = styled.p`\n  font-size: 20px;\n`;\n\nconst StyledButtonContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst StepsContainer = styled.div``;\n\nconst StyledFlexContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  outline: none;\n  width: 90%;\n  max-width: 600px;\n  margin-top: 60px;\n`;\n\nconst StyledInput = styled.input`\n  border: none;\n  border-bottom: 1px solid black;\n  height: 60px;\n  margin-bottom: 70px;\n  font-size: 30px;\n  outline: none;\n`;\n\nconst StyledSubmitButton = styled(Button)`\n  font-size: 25px;\n  height: 70px;\n  padding: 0 5px;\n  min-width: 120px;\n  background-color: ${Constants.COLOR.DARK_GREEN};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledAddStepButton = styled(StyledSubmitButton)``;\n\nconst StyledDashboardButton = styled(Button)`\n  font-size: 15px;\n  height: 50px;\n  padding: 0 5px;\n  min-width: 120px;\n  background-color: ${Constants.COLOR.LIGHT_GREEN};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledError = styled.p`\n  color: red;\n  margin-top: -20px;\n`;\n\nconst StyledText = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n  margin: 0;\n`;\n\nexport default CreateModule;\n"],"sourceRoot":""}