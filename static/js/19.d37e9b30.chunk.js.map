{"version":3,"sources":["components/Template/EditQuestionCard.js","pages/Teacher/Module/Steps/EditQuiz.js","components/Template/Button.js","app/module/actions.js","app/module/selectors.js","components/Template/QuestionCard.js"],"names":["StyledInput","styled","textarea","StyledQuestionInput","StyledError","p","StyledAnswer","button","Constants","COLOR","LIGHT_GREEN","DARK_GREEN","StyledX","StyledQuiz","div","QuestionSection","QuestionText","AnswerSection","ul","SubmitButton","StyledButton","AddAnswerButton","EditQuestionCard","props","questionText","setQuestionText","useState","questions","currentQuestion","answerOptions","setAnswerOptions","answerText","isCorrect","answerOptionCards","setAnswerOptionCards","error","setError","useEffect","createCards","cards","map","answerOption","EditAnswerButton","style","height","length","indexOf","isChecked","setIsChecked","type","defaultValue","onChange","e","key","target","value","i","undefined","checked","onClick","correct","filter","includes","onRadioClick","splice","id","placeholder","answerValues","Array","from","document","getElementById","children","item","firstChild","questionValue","answer","option","onSubmit","StyledBody","HEADER_HEIGHT","SIDEBAR_WIDTH","StyledAddQuestionButton","Button","GREEN","StyledSubmitButton","StyledSectionTitle","EditQuiz","dispatch","useDispatch","history","useHistory","step","useSelector","selectSelectedStep","setQuestions","data","showEditQuestion","setShowEditQuestion","selectNextID","steps","selectSteps","title","description","question","inEdit","updateStep","order","addStep","push","setCurrentStep","payload","setSelectedModule","moduleToAdd","setSelectedStep","stepToAdd","setSteps","setTitle","setDescription","selectModuleState","createSelector","store","getState","state","module","selectIsInModule","inModule","selectCurrentStep","currentStep","selectSelectedModule","selectedModule","selectedStep","Math","max","selectCurrentStepData","selectCurrentStepPercentage","QuestionCount","AnswerButton","QuestionCard","handleAnswerOptionClick"],"mappings":"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","file":"static/js/19.d37e9b30.chunk.js","sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Constants } from \"../../data/constants\";\nimport StyledButton from \"./Button\";\n\nconst EditQuestionCard = (props) => {\n  const [questionText, setQuestionText] = useState(\n    props?.questions[props.currentQuestion]\n      ? props.questions[props.currentQuestion].questionText\n      : \"\"\n  );\n  const [answerOptions, setAnswerOptions] = useState(\n    props?.questions[props.currentQuestion]\n      ? props.questions[props.currentQuestion].answerOptions\n      : [\n          { answerText: \"\", isCorrect: true },\n          { answerText: \"\", isCorrect: false },\n        ]\n  );\n  const [answerOptionCards, setAnswerOptionCards] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    createCards(answerOptions);\n  }, [answerOptions]);\n\n  const createCards = (answerOptions) => {\n    const cards = answerOptions.map((answerOption) => (\n      <EditAnswerButton\n        style={{\n          height: `${500 / answerOptions.length}px`,\n        }}\n        answerOption={answerOption}\n        key={`${answerOption.answerText}${answerOptions.indexOf(answerOption)}${\n          answerOption.isCorrect\n        }`}\n      ></EditAnswerButton>\n    ));\n    setAnswerOptionCards(cards);\n  };\n\n  const EditAnswerButton = ({ answerOption, style }) => {\n    const [isChecked, setIsChecked] = useState(answerOption.isCorrect);\n\n    const onRadioClick = (answerOption) => {\n      const correct = answerOptions.filter(\n        (answerOption) => answerOption.isCorrect\n      );\n      if (correct.includes(answerOption) && correct.length === 1) {\n        return;\n      }\n      delete answerOptions[answerOption.key];\n      answerOption.isCorrect = !answerOption.isCorrect;\n      for (var i = 0; i < answerOptions.length; i++) {\n        if (answerOptions[i] === undefined) {\n          answerOptions[i] = answerOption;\n        }\n      }\n      setAnswerOptions(answerOptions);\n      setIsChecked(answerOption.isCorrect);\n    };\n\n    return (\n      <StyledAnswer style={style}>\n        <StyledInput\n          type=\"text\"\n          defaultValue={answerOption.answerText}\n          onChange={(e) => {\n            delete answerOptions[answerOption.key];\n            answerOption.answerText = e.target.value;\n            for (var i = 0; i < answerOptions.length; i++) {\n              if (answerOptions[i] === undefined) {\n                answerOptions[i] = answerOption;\n              }\n            }\n          }}\n          data-test=\"answer\"\n        />\n        <input\n          type=\"radio\"\n          checked={isChecked}\n          onClick={() => onRadioClick(answerOption)}\n          onChange={() => null}\n          data-test=\"is-correct\"\n        />\n        <StyledX\n          onClick={() => {\n            if (answerOptions.length < 3) {\n              return;\n            }\n            answerOptions.splice(answerOptions.indexOf(answerOption), 1);\n            setAnswerOptions(answerOptions);\n            createCards(answerOptions);\n          }}\n        >\n          X\n        </StyledX>\n      </StyledAnswer>\n    );\n  };\n\n  const onSubmit = () => {\n    setError(\"\");\n    const answerValues = Array.from(\n      document.getElementById(\"answerSection\").children\n    ).map((item) => item.firstChild.value);\n    const questionValue = document.getElementById(\"question\").value;\n    if (questionValue == \"\") {\n      setError(\"Please fill out all fields.\");\n      return;\n    }\n    for (let answer of answerValues) {\n      if (answer == \"\") {\n        setError(\"Please fill out all fields.\");\n        return;\n      }\n    }\n    if (!answerOptions.map((option) => option.isCorrect).includes(true)) {\n      setError(\"There must be at least one correct answer\");\n    }\n    props.onSubmit([\n      ...props.questions,\n      { questionText: questionValue, answerOptions: answerOptions },\n    ]);\n  };\n\n  return (\n    <StyledQuiz>\n      <QuestionSection>\n        <QuestionText>\n          <StyledQuestionInput\n            id=\"question\"\n            type=\"text\"\n            placeholder={questionText}\n            data-test=\"question\"\n          />\n        </QuestionText>\n        <StyledError>{error}</StyledError>\n        <SubmitButton onClick={onSubmit} data-test=\"submit-question\">\n          Submit Question\n        </SubmitButton>\n        <AddAnswerButton\n          onClick={() =>\n            answerOptions.length < 4\n              ? setAnswerOptions([\n                  ...answerOptions,\n                  { answerText: \"\", isCorrect: false },\n                ])\n              : null\n          }\n          data-test=\"add-answer\"\n        >\n          Add Answer\n        </AddAnswerButton>\n      </QuestionSection>\n      <AnswerSection id=\"answerSection\">{answerOptionCards}</AnswerSection>\n    </StyledQuiz>\n  );\n};\n\nconst StyledInput = styled.textarea`\n  height: 90%;\n  width: 90%;\n  font-size: 45px;\n`;\n\nconst StyledQuestionInput = styled.textarea`\n  height: 200px;\n  width: 90%;\n  font-size: 45px;\n`;\n\nconst StyledError = styled.p`\n  color: red;\n`;\n\nconst StyledAnswer = styled.button`\n  width: 100%;\n  font-size: 35px;\n  background-color: ${Constants.COLOR.LIGHT_GREEN};\n  border-radius: 15px;\n  display: flex;\n  padding: 20px;\n  justify-content: flex-start;\n  align-items: center;\n  border: 5px solid ${Constants.COLOR.DARK_GREEN};\n  margin: 10px 0px;\n`;\n\nconst StyledX = styled.p`\n  font-size: 20px;\n  margin-left: 5px;\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledQuiz = styled.div`\n  background-color: ${Constants.COLOR.DARK_GREEN};\n  width: 80%;\n  height: 600px;\n  border-radius: 15px;\n  box-sizing: border-box;\n  padding: 20px;\n  box-shadow: 10px 10px 42px 0px rgba(0, 0, 0, 0.75);\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nconst QuestionSection = styled.div`\n  width: 100%;\n  position: relative;\n`;\n\nconst QuestionText = styled.div`\n  font-size: 50px;\n  margin-bottom: 12px;\n`;\n\nconst AnswerSection = styled.ul`\n  width: 100%;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst SubmitButton = styled(StyledButton)`\n  width: 120px;\n  height: 80px;\n  position: absolute;\n  bottom: 0;\n  border-radius: 10px;\n`;\n\nconst AddAnswerButton = styled(StyledButton)`\n  width: 120px;\n  height: 80px;\n  position: absolute;\n  bottom: 0;\n  right: 10px;\n  border-radius: 10px;\n`;\n\nexport default EditQuestionCard;\n","import React, { useState } from \"react\";\nimport Main from \"../../../../layouts/Main\";\nimport SideBar from \"../../../../components/Template/SideBar\";\nimport Header from \"../../../../components/Teacher/Header\";\nimport styled from \"styled-components\";\nimport { Constants } from \"../../../../data/constants\";\nimport Button from \"../../../../components/Template/Button\";\nimport EditQuestionCard from \"../../../../components/Template/EditQuestionCard\";\nimport QuestionCard from \"../../../../components/Template/QuestionCard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { addStep, updateStep } from \"../../../../app/module/actions\";\nimport {\n  selectNextID,\n  selectSelectedStep,\n  selectSteps,\n} from \"../../../../app/module/selectors\";\nimport Hamburger from \"../../../../components/Template/Hamburger\";\n\nconst EditQuiz = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const step = useSelector(selectSelectedStep);\n  const [questions, setQuestions] = useState(\n    step?.data ? step.data.questions : []\n  );\n  const [showEditQuestion, setShowEditQuestion] = useState(false);\n  const id = useSelector(selectNextID);\n  const steps = useSelector(selectSteps);\n\n  const addQuestion = (questions) => {\n    setQuestions(questions);\n    setShowEditQuestion(false);\n  };\n\n  const onSubmit = () => {\n    if (step !== undefined) {\n      dispatch(\n        updateStep({\n          type: \"quiz\",\n          order: step.order,\n          id: step.id,\n          data: {\n            questions: questions,\n          },\n        })\n      );\n    } else {\n      dispatch(\n        addStep({\n          type: \"quiz\",\n          order: steps.length,\n          id: id,\n          data: {\n            questions: questions,\n          },\n        })\n      );\n    }\n    history.push(`/teacher/create-module`);\n  };\n\n  return (\n    <Main title={\"Edit Quiz Step\"} description={\"Edit Quiz Step\"}>\n      <SideBar />\n      <Header />\n      <Hamburger />\n      <StyledBody>\n        <StyledSectionTitle>Edit Quiz</StyledSectionTitle>\n        <StyledAddQuestionButton\n          onClick={() => setShowEditQuestion(true)}\n          data-test=\"add-question\"\n        >\n          Add Question\n        </StyledAddQuestionButton>\n        {showEditQuestion && (\n          <EditQuestionCard onSubmit={addQuestion} questions={questions} />\n        )}\n        {questions.map((question) => (\n          <StyledQuiz key={questions.indexOf(question)}>\n            <QuestionCard\n              questions={questions}\n              currentQuestion={questions.indexOf(question)}\n              inEdit={true}\n            />\n          </StyledQuiz>\n        ))}\n        {questions.length != 0 && (\n          <StyledSubmitButton onClick={onSubmit} data-test=\"submit\">\n            Submit\n          </StyledSubmitButton>\n        )}\n      </StyledBody>\n    </Main>\n  );\n};\n\nconst StyledBody = styled.div`\n  margin-top: ${Constants.HEADER_HEIGHT};\n  margin-left: ${Constants.SIDEBAR_WIDTH};\n  padding: 0 50px;\n`;\n\nconst StyledQuiz = styled.div`\n  background-color: ${Constants.COLOR.DARK_GREEN};\n  width: 80%;\n  min-height: 200px;\n  height: 600px;\n  border-radius: 15px;\n  box-sizing: border-box;\n  padding: 20px;\n  margin-top: 40px;\n  box-shadow: 10px 10px 42px 0px rgba(0, 0, 0, 0.75);\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nconst StyledAddQuestionButton = styled(Button)`\n  height: 60px;\n  width: 130px;\n  margin-top: 40px;\n  background-color: ${Constants.COLOR.GREEN};\n  border-radius: 40px;\n  position: absolute;\n  right: 50px;\n`;\n\nconst StyledSubmitButton = styled(Button)`\n  height: 60px;\n  width: 130px;\n  margin-top: 40px;\n  background-color: ${Constants.COLOR.DARK_GREEN};\n`;\n\nconst StyledSectionTitle = styled.p`\n  font-size: 36px;\n  line-height: 43px;\n  font-weight: 500;\n`;\n\nexport default EditQuiz;\n","import { Constants } from \"../../data/constants\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.div`\n  background-color: ${Constants.COLOR.LIGHT_GREEN};\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  color: white;\n  font-weight: bold;\n  &:hover {\n    filter: brightness(110%);\n    cursor: pointer;\n  }\n`;\n\nexport default StyledButton;\n","export const setCurrentStep = (step) => {\n  return {\n    type: \"SET_CURRENT_STEP\",\n    payload: step,\n  };\n};\n\nexport const setSelectedModule = (moduleToAdd) => {\n  return {\n    type: \"SET_SELECTED_MODULE\",\n    payload: moduleToAdd,\n  };\n};\n\nexport const setSelectedStep = (stepToAdd) => {\n  return {\n    type: \"SET_SELECTED_STEP\",\n    payload: stepToAdd,\n  };\n};\n\nexport const addStep = (step) => {\n  return {\n    type: \"ADD_STEP\",\n    payload: step,\n  };\n};\n\nexport const updateStep = (step) => {\n  return {\n    type: \"UPDATE_STEP\",\n    payload: step,\n  };\n};\n\nexport const setSteps = (steps) => {\n  return {\n    type: \"SET_STEPS\",\n    payload: steps,\n  };\n};\n\nexport const setTitle = (title) => {\n  return {\n    type: \"SET_TITLE\",\n    payload: title,\n  };\n};\n\nexport const setDescription = (description) => {\n  return {\n    type: \"SET_DESCRIPTION\",\n    payload: description,\n  };\n};\n","import { createSelector } from \"reselect\";\nimport { store } from \"../store.js\";\n\nconst selectState = () => store.getState();\n\nconst selectModuleState = createSelector(selectState, (state) => state.module);\n\nexport const selectIsInModule = createSelector(\n  selectModuleState,\n  (state) => state.inModule\n);\n\nexport const selectCurrentStep = createSelector(\n  selectModuleState,\n  (state) => state.currentStep\n);\n\nexport const selectSelectedModule = createSelector(\n  selectModuleState,\n  (state) => state.selectedModule\n);\n\nexport const selectSelectedStep = createSelector(\n  selectModuleState,\n  (state) => state.selectedStep\n);\n\nexport const selectSteps = createSelector(\n  selectSelectedModule,\n  (module) => module?.steps\n);\n\nexport const selectNextID = createSelector(selectSteps, (steps) => {\n  if (steps.length === 0) {\n    return 0;\n  } else {\n    return Math.max(...steps.map((step) => step.id)) + 1;\n  }\n});\n\nexport const selectCurrentStepData = createSelector(\n  selectCurrentStep,\n  selectSteps,\n  (currentStep, steps) => steps[currentStep].data\n);\n\nexport const selectCurrentStepPercentage = createSelector(\n  selectCurrentStep,\n  selectSteps,\n  (currentStep, steps) => ((currentStep + 1) / (steps.length + 1)) * 100\n);\n","import styled from \"styled-components\";\nimport { Constants } from \"../../data/constants\";\n\nconst QuestionCard = (props) => {\n  return (\n    <>\n      <QuestionSection>\n        <QuestionCount>\n          <span>Question {props.currentQuestion + 1}</span>/\n          {props.questions.length}\n        </QuestionCount>\n        <QuestionText data-test=\"question-text\">\n          {props.questions[props.currentQuestion].questionText}\n        </QuestionText>\n      </QuestionSection>\n      <AnswerSection>\n        {props.questions[props.currentQuestion].answerOptions.map(\n          (answerOption) => {\n            return (\n              <AnswerButton\n                onClick={() =>\n                  !props.inEdit\n                    ? props.handleAnswerOptionClick(answerOption.isCorrect)\n                    : undefined\n                }\n                style={{\n                  height: `${\n                    100 /\n                    props.questions[props.currentQuestion].answerOptions.length\n                  }%`,\n                }}\n                key={props.questions[\n                  props.currentQuestion\n                ].answerOptions.indexOf(answerOption)}\n                data-test=\"answer-text\"\n              >\n                {answerOption.answerText}\n              </AnswerButton>\n            );\n          }\n        )}\n      </AnswerSection>\n    </>\n  );\n};\n\nconst QuestionSection = styled.div`\n  width: 100%;\n  position: relative;\n`;\n\nconst QuestionCount = styled.div`\n  margin-bottom: 20px;\n\n  span {\n    font-size: 40px;\n  }\n`;\n\nconst QuestionText = styled.div`\n  font-size: 50px;\n  margin-bottom: 12px;\n`;\n\nconst AnswerSection = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst AnswerButton = styled.button`\n  width: 100%;\n  font-size: 35px;\n  background-color: ${Constants.COLOR.LIGHT_GREEN};\n  border-radius: 15px;\n  display: flex;\n  padding: 20px;\n  justify-content: flex-start;\n  align-items: center;\n  border: 5px solid ${Constants.COLOR.DARK_GREEN};\n  cursor: pointer;\n  margin: 10px 0px;\n`;\n\nexport default QuestionCard;\n"],"sourceRoot":""}