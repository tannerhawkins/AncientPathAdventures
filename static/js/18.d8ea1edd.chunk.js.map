{"version":3,"sources":["components/Template/Button.js","app/module/actions.js","pages/Teacher/Module/AddModule.js"],"names":["StyledButton","styled","div","Constants","COLOR","LIGHT_GREEN","setCurrentStep","step","type","payload","setSelectedModule","moduleToAdd","addStep","setSteps","steps","StyledBody","HEADER_HEIGHT","SIDEBAR_WIDTH","StyledSectionTitle","p","ExistingModules","StyledButtonContainer","StyledDashboardButton","Button","AddModule","dispatch","useDispatch","history","useHistory","modulesList","useSelector","selectModuleList","currentClass","selectCurrentClass","modulesCards","filter","module","modules","includes","mid","map","onClick","handleClick","classDataDb","doc","cid","update","firebase","firestore","FieldValue","arrayUnion","then","get","setCurrentClass","data","title","description","EMPTY_MODULE","push"],"mappings":"gIAAA,YAGA,MAAMA,EAHN,MAGqBC,EAAOC,GAAI;sBACVC,IAAUC,MAAMC;;;;;;;;;;;;EAcvBL,O,gCClBf,wIAAO,MAAMM,EAAkBC,IACtB,CACLC,KAAM,mBACNC,QAASF,IAIAG,EAAqBC,IACzB,CACLH,KAAM,sBACNC,QAASE,IAIAC,EAAWL,IACf,CACLC,KAAM,WACNC,QAASF,IAIAM,EAAYC,IAChB,CACLN,KAAM,YACNC,QAASK,K,gCCxBb,8IAiBA,MA+DMC,EAAad,IAAOC,GAAI;gBACdC,IAAUa;iBACTb,IAAUc;;EAIrBC,EAAqBjB,IAAOkB,CAAE;;;;EAM9BC,EAAkBnB,IAAOC,GAAI;;;;;;EAQ7BmB,EAAwBpB,IAAOC,GAAI;;;;;EAOnCoB,EAAwBrB,YAAOsB,IAAQ;;;;;sBAKvBpB,IAAUC,MAAMC;;;;EAMvBmB,UArGG,KAChB,MAAMC,EAAWC,cACXC,EAAUC,cACVC,EAAcC,YAAYC,KAC1BC,EAAeF,YAAYG,KAM3BC,EAAY,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EACjBM,QAAQC,KAAW,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAcK,QAAQC,SAASF,EAAOG,QAC3DC,KAAK7B,GACJ,cAAC,IAAD,CACE8B,QAAS,IAAMC,EAAY/B,EAAY4B,KACvCH,OAAQzB,EAAY4B,QAIpBG,EAAeH,IACnBI,IACGC,IAAIZ,EAAaa,KACjBC,OAAO,CACNT,QAASU,IAASC,UAAUC,WAAWC,WAAWX,KAEnDY,KACCR,IACGC,IADH,OACOZ,QADP,IACOA,OADP,EACOA,EAAca,KAClBO,MACAD,MAAMP,GAAQnB,EAAS4B,YAAgBT,EAAIU,aAcpD,OACE,eAAC,IAAD,CAAMC,MAAO,eAAgBC,YAAa,eAA1C,UACE,cAAC,IAAD,IACA,cAAC,IAAD,IACA,eAACzC,EAAD,WACE,cAACG,EAAD,+BACA,cAACE,EAAD,UAAkBc,IAClB,eAACb,EAAD,WACE,cAACC,EAAD,CAAuBmB,QAlBD,KAC5BhB,EAASf,YAAkBP,IAAUsD,eACrC9B,EAAQ+B,KAAM,kBAgBR,+BAGA,cAACpC,EAAD,CAAuBmB,QAAS,IAAMd,EAAQ+B,KAAM,QAApD","file":"static/js/18.d8ea1edd.chunk.js","sourcesContent":["import { Constants } from \"../../data/constants\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.div`\n  background-color: ${Constants.COLOR.LIGHT_GREEN};\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  color: white;\n  font-weight: bold;\n  &:hover {\n    filter: brightness(110%);\n    cursor: pointer;\n  }\n`;\n\nexport default StyledButton;\n","export const setCurrentStep = (step) => {\n  return {\n    type: \"SET_CURRENT_STEP\",\n    payload: step,\n  };\n};\n\nexport const setSelectedModule = (moduleToAdd) => {\n  return {\n    type: \"SET_SELECTED_MODULE\",\n    payload: moduleToAdd,\n  };\n};\n\nexport const addStep = (step) => {\n  return {\n    type: \"ADD_STEP\",\n    payload: step,\n  };\n};\n\nexport const setSteps = (steps) => {\n  return {\n    type: \"SET_STEPS\",\n    payload: steps,\n  };\n};\n","import React from \"react\";\r\nimport Main from \"../../../layouts/Main\";\r\nimport SideBar from \"../../../components/Template/SideBar\";\r\nimport Header from \"../../../components/Teacher/Header\";\r\nimport styled from \"styled-components\";\r\nimport { Constants } from \"../../../data/constants\";\r\nimport { classDataDb } from \"../../../data/firebase\";\r\nimport ModuleCard from \"../../../components/Template/ModuleCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectModuleList } from \"../../../app/account/selectors\";\r\nimport { selectCurrentClass } from \"../../../app/class/selectors\";\r\nimport { setCurrentClass } from \"../../../app/class/actions\";\r\nimport firebase from \"firebase\";\r\nimport Button from \"../../../components/Template/Button\";\r\nimport { useHistory } from \"react-router\";\r\nimport { setSelectedModule } from \"../../../app/module/actions\";\r\n\r\nconst AddModule = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const modulesList = useSelector(selectModuleList);\r\n  const currentClass = useSelector(selectCurrentClass);\r\n\r\n  // This should be edited to fit style that you would like\r\n  // This turns the modules in the modulesList to divs to be displayed\r\n  // This should also include buttons or the ability to be clicked or something to be\r\n  // able to select the module to be added and assigned to the class\r\n  const modulesCards = modulesList\r\n    ?.filter((module) => !currentClass?.modules.includes(module.mid))\r\n    .map((moduleToAdd) => (\r\n      <ModuleCard\r\n        onClick={() => handleClick(moduleToAdd.mid)}\r\n        module={moduleToAdd.mid}\r\n      />\r\n    ));\r\n\r\n  const handleClick = (mid) => {\r\n    classDataDb\r\n      .doc(currentClass.cid)\r\n      .update({\r\n        modules: firebase.firestore.FieldValue.arrayUnion(mid),\r\n      })\r\n      .then(\r\n        classDataDb\r\n          .doc(currentClass?.cid)\r\n          .get()\r\n          .then((doc) => dispatch(setCurrentClass(doc.data())))\r\n      );\r\n  };\r\n\r\n  const handleCreateNewModule = () => {\r\n    dispatch(setSelectedModule(Constants.EMPTY_MODULE));\r\n    history.push(`create-module`);\r\n  };\r\n\r\n  // I think this page should be some kind of place to search for already created modules\r\n  // There should be some kind of search functionality that connects to firebase to allow\r\n  // teachers to search through modules created by APA and by other teachers\r\n  // Also should include a button to go to the create a module page\r\n  // FOR NOW NO SEARCH FUNCTIONALITY, JUST SHOW ALL AVAILABLE MODULES\r\n  return (\r\n    <Main title={\"Add a Module\"} description={\"Add a Module\"}>\r\n      <SideBar />\r\n      <Header />\r\n      <StyledBody>\r\n        <StyledSectionTitle>Existing Modules</StyledSectionTitle>\r\n        <ExistingModules>{modulesCards}</ExistingModules>\r\n        <StyledButtonContainer>\r\n          <StyledDashboardButton onClick={handleCreateNewModule}>\r\n            CREATE NEW MODULE\r\n          </StyledDashboardButton>\r\n          <StyledDashboardButton onClick={() => history.push(`home`)}>\r\n            BACK TO DASHBOARD\r\n          </StyledDashboardButton>\r\n        </StyledButtonContainer>\r\n      </StyledBody>\r\n    </Main>\r\n  );\r\n};\r\n\r\nconst StyledBody = styled.div`\r\n  margin-top: ${Constants.HEADER_HEIGHT};\r\n  margin-left: ${Constants.SIDEBAR_WIDTH};\r\n  padding: 0 50px;\r\n`;\r\n\r\nconst StyledSectionTitle = styled.p`\r\n  font-size: 36px;\r\n  line-height: 43px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst ExistingModules = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-wrap: no-wrap;\r\n  overflow: auto;\r\n  height: 300px;\r\n`;\r\n\r\nconst StyledButtonContainer = styled.div`\r\n  display: flex;\r\n  align-items: space-around;\r\n  justify-content: space-around;\r\n  width: 60%;\r\n`;\r\n\r\nconst StyledDashboardButton = styled(Button)`\r\n  font-size: 15px;\r\n  height: 50px;\r\n  padding: 0 5px;\r\n  width: 220px;\r\n  background-color: ${Constants.COLOR.LIGHT_GREEN};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default AddModule;\r\n"],"sourceRoot":""}