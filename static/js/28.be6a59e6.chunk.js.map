{"version":3,"sources":["pages/Teacher/AddStudents.js","components/Template/Button.js","components/Template/ClassDropdown.js"],"names":["StyledBody","styled","div","Constants","HEADER_HEIGHT","SIDEBAR_WIDTH","StyledTitle","p","StyledButtonContainer","StyledForm","form","StyledInput","input","StyledSubmitButton","Button","COLOR","DARK_GREEN","StyledDashboardButton","LIGHT_GREEN","StyledError","StyledText","AddStudents","history","useHistory","errorMessage","setErrorMessage","useState","currentClass","useSelector","selectCurrentClass","selectClassList","title","description","id","type","name","required","onClick","data","Object","values","document","forms","studentsForm","reduce","obj","field","value","includes","userDataDb","where","get","then","result","docs","undefined","accountType","classList","map","cls","cid","classDataDb","doc","update","students","firebase","firestore","FieldValue","arrayUnion","uid","displayName","email","modules","className","getElementById","reset","push","StyledButton","DropdownWrapper","StyledSelect","select","GREEN","GRAY","StyledOption","option","props","defaultValue","Dropdown","dispatch","useDispatch","classes","useEffect","action","onChange","event","Array","from","target","children","filter","item","selected","dataset","setCurrentClass","classItem"],"mappings":"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","file":"static/js/28.be6a59e6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Main from \"../../layouts/Main\";\nimport SideBar from \"../../components/Template/SideBar\";\nimport Header from \"../../components/Teacher/Header\";\nimport styled from \"styled-components\";\nimport { Constants } from \"../../data/constants\";\nimport Button from \"../../components/Template/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport { classDataDb, userDataDb } from \"../../data/firebase\";\nimport Dropdown, { Option } from \"../../components/Template/ClassDropdown\";\nimport { useSelector } from \"react-redux\";\nimport { selectCurrentClass } from \"../../app/class/selectors\";\nimport { selectClassList } from \"../../app/account/selectors\";\nimport firebase from \"firebase\";\nimport Hamburger from \"../../components/Template/Hamburger\";\n\nconst AddStudents = () => {\n  const history = useHistory();\n  const [errorMessage, setErrorMessage] = useState();\n  const currentClass = useSelector(selectCurrentClass);\n  const classes = useSelector(selectClassList);\n  const handleSubmit = () => {\n    setErrorMessage();\n\n    // get form data\n    const data = Object.values(document.forms.studentsForm).reduce(\n      (obj, field) => {\n        obj[field.name] = field.value;\n        return obj;\n      },\n      {}\n    );\n\n    // checks fields are filled out\n    if (data[\"email\"] === \"\" || !data[\"email\"].includes(\"@\")) {\n      setErrorMessage(\"Please enter a valid email\");\n      return;\n    }\n    userDataDb\n      .where(\"email\", \"==\", data[\"email\"])\n      .get()\n      .then((result) => {\n        const data = result.docs[0]?.data();\n        if (data === undefined || data.accountType !== \"student\") {\n          setErrorMessage(\"Student not found\");\n          return;\n        } else if (\n          data.classList.map((cls) => cls.cid).includes(currentClass.cid)\n        ) {\n          setErrorMessage(\"Student already in class\");\n          return;\n        } else {\n          classDataDb.doc(currentClass.cid).update({\n            students: firebase.firestore.FieldValue.arrayUnion({\n              uid: data.uid,\n              displayName: data.displayName,\n              email: data.email,\n            }),\n          });\n          userDataDb.doc(data.uid).update({\n            classList: firebase.firestore.FieldValue.arrayUnion({\n              cid: currentClass.cid,\n              modules: currentClass.modules,\n              className: currentClass.className,\n            }),\n          });\n          setErrorMessage(\n            `Added ${data.displayName} to ${currentClass.className}`\n          );\n          document.getElementById(\"studentsForm\").reset();\n        }\n      });\n  };\n\n  // Should really just take an input of a students email and add that student\n  // to the current selected class. Should maybe include the drop down from the\n  // modules page to allow teacher to change selected class on this page.\n  return (\n    <Main title={\"Add a Student\"} description={\"Add a Student\"}>\n      <SideBar />\n      <Header />\n      <Hamburger />\n      <StyledBody>\n        <StyledTitle>Add Students to a Class</StyledTitle>\n        <StyledForm id=\"studentsForm\">\n          <StyledText>Student's Email</StyledText>\n          <StyledInput type=\"text\" name=\"email\" data-test=\"email\" required />\n          <StyledText>Add to Class</StyledText>\n          <Dropdown />\n          <StyledError data-test=\"error\">{errorMessage}</StyledError>\n          <StyledButtonContainer>\n            <StyledSubmitButton onClick={handleSubmit} data-test=\"submit\">\n              ADD TO CLASS\n            </StyledSubmitButton>\n            <StyledDashboardButton\n              onClick={() => history.push(`teacher/home`)}\n              data-test=\"back\"\n            >\n              BACK TO DASHBOARD\n            </StyledDashboardButton>\n          </StyledButtonContainer>\n        </StyledForm>\n      </StyledBody>\n    </Main>\n  );\n};\n\nconst StyledBody = styled.div`\n  margin-top: ${Constants.HEADER_HEIGHT};\n  margin-left: ${Constants.SIDEBAR_WIDTH};\n  padding: 0 50px;\n  @media (max-width: 500px) {\n    margin: 0px 0px;\n    padding: 0 5%;\n  }\n`;\n\nconst StyledTitle = styled.p`\n  line-height: 36px;\n  font-size: 30px;\n  font-weight: 600;\n`;\n\nconst StyledParagraph = styled.p`\n  font-size: 20px;\n`;\n\nconst StyledButtonContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  outline: none;\n  width: 90%;\n  max-width: 600px;\n  margin-top: 60px;\n`;\n\nconst StyledInput = styled.input`\n  border: none;\n  border-bottom: 1px solid black;\n  height: 60px;\n  margin-bottom: 70px;\n  font-size: 30px;\n  outline: none;\n`;\n\nconst StyledSubmitButton = styled(Button)`\n  font-size: 25px;\n  height: 70px;\n  padding: 0 5px;\n  min-width: 120px;\n  background-color: ${Constants.COLOR.DARK_GREEN};\n  &:hover {\n    cursor: pointer;\n  }\n  @media (max-width: 500px) {\n    margin-right: 10px;\n    font-size: 20px;\n    height: 50px;\n  }\n`;\n\nconst StyledDashboardButton = styled(Button)`\n  font-size: 15px;\n  height: 50px;\n  padding: 0 5px;\n  min-width: 120px;\n  background-color: ${Constants.COLOR.LIGHT_GREEN};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledError = styled.p`\n  color: red;\n`;\n\nconst StyledText = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n  margin: 0;\n`;\n\nexport default AddStudents;\n","import { Constants } from \"../../data/constants\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.div`\n  background-color: ${Constants.COLOR.LIGHT_GREEN};\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  color: white;\n  font-weight: bold;\n  &:hover {\n    filter: brightness(110%);\n    cursor: pointer;\n  }\n`;\n\nexport default StyledButton;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { selectClassList } from \"../../app/account/selectors\";\nimport { setCurrentClass } from \"../../app/class/actions\";\nimport { selectCurrentClass } from \"../../app/class/selectors\";\nimport { Constants } from \"../../data/constants\";\nimport { classDataDb } from \"../../data/firebase\";\n\nexport const Dropdown = (props) => {\n  const dispatch = useDispatch();\n  const classes = useSelector(selectClassList);\n  const currentClass = useSelector(selectCurrentClass);\n\n  useEffect(() => {});\n\n  const selectClass = (event) => {\n    const cid = Array.from(event.target.children)\n      .filter((item) => item.selected)\n      .map((item) => item.dataset.cid)[0];\n    classDataDb\n      .doc(cid)\n      .get()\n      .then((result) => dispatch(setCurrentClass(result.data())));\n  };\n\n  return classes[0] ? (\n    <DropdownWrapper action={props.action} data-test=\"dropdown\">\n      <StyledSelect\n        id=\"services\"\n        data-test=\"class\"\n        name=\"services\"\n        onChange={selectClass}\n        defaultValue={currentClass?.cid}\n      >\n        {classes.map((item) => {\n          return (\n            <StyledOption\n              value={item.cid}\n              data-cid={item.cid}\n              classItem={item}\n              key={item.cid}\n            >\n              {item.className}\n            </StyledOption>\n          );\n        })}\n      </StyledSelect>\n    </DropdownWrapper>\n  ) : (\n    <></>\n  );\n};\n\nexport const DropdownWrapper = styled.form`\n  display: flex;\n  flex-flow: column;\n  justify-content: flex-start;\n`;\n\nexport const StyledSelect = styled.select`\n  height: 100%;\n  padding: 0.5rem;\n  border: 0px;\n  outline: 0px;\n  font-size: 25px;\n  color: ${Constants.COLOR.GREEN};\n  background-color: ${Constants.COLOR.GRAY};\n`;\n\nexport const StyledOption = styled.option`\n  color: ${(props) => (props.defaultValue ? \"lightgrey\" : \"black\")};\n`;\n\nexport default Dropdown;\n"],"sourceRoot":""}