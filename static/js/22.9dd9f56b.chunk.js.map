{"version":3,"sources":["images/Icons/gear icon.png","pages/Profile.js","components/Template/Button.js"],"names":["StyledHomepage","styled","div","StyledIcon","img","StyledError","p","StyledInput","input","StyledBody","Constants","HEADER_HEIGHT","SIDEBAR_WIDTH","StyledSubmitButton","StyledButton","COLOR","DARK_GREEN","BodyHeader","ProfileCard","StyledTitle","GREEN","TitleContainer","StyledSectionHeader","UserData","ModulesHomepage","user","useSelector","selectUser","history","useHistory","dispatch","useDispatch","errorMessage","setErrorMessage","useState","inForm","setInForm","Main","title","description","SideBar","Header","Hamburger","id","src","gearIcon","onClick","name","defaultValue","displayName","type","deafultValue","email","repeat","passwordLength","style","backgroundColor","LIGHT_GREEN","data","Object","values","document","forms","profileForm","reduce","obj","field","value","currPassword","auth","signInWithEmailAndPassword","then","currentUser","updateProfile","catch","response","message","error","userDataDb","doc","uid","update","get","signIn","updateEmail","newPassword","newPasswordConfirm","updatePassword","setPasswordLength","length","push"],"mappings":"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","file":"static/js/22.9dd9f56b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/gear icon.9fac98a9.png\";","import React, { useEffect, useState } from \"react\";\nimport SideBar from \"../components/Template/SideBar\";\nimport Header from \"../components/Teacher/Header\";\nimport styled from \"styled-components\";\nimport Hamburger from \"../components/Template/Hamburger\";\nimport Main from \"../layouts/Main\";\nimport { Constants } from \"../data/constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectEmail, selectUser } from \"../app/account/selectors\";\nimport { auth, userDataDb } from \"../data/firebase\";\nimport gearIcon from \"../images/Icons/gear icon.png\";\nimport StyledButton from \"../components/Template/Button\";\nimport { useHistory } from \"react-router\";\nimport { setPasswordLength, signIn } from \"../app/account/actions\";\n\nconst ModulesHomepage = () => {\n  const user = useSelector(selectUser);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [errorMessage, setErrorMessage] = useState();\n  const [inForm, setInForm] = useState(false);\n\n  const handleSubmit = () => {\n    setErrorMessage(\"\");\n\n    const data = Object.values(document.forms.profileForm).reduce(\n      (obj, field) => {\n        obj[field.name] = field.value;\n        return obj;\n      },\n      {}\n    );\n\n    if (data.name !== user.displayName) {\n      if (data.currPassword === \"\") {\n        setErrorMessage(\"Enter password to change display name\");\n        return;\n      } else {\n        auth\n          .signInWithEmailAndPassword(user.email, data.currPassword)\n          .then(() => {\n            auth.currentUser\n              .updateProfile({ displayName: data.name })\n              .then(() => {})\n              .catch((response) => {\n                setErrorMessage(response.message);\n                error = true;\n                return;\n              });\n          })\n          .then(\n            userDataDb\n              .doc(auth.currentUser.uid)\n              .update({\n                displayName: data.name,\n              })\n              .then(\n                userDataDb\n                  .doc(auth.currentUser.uid)\n                  .get()\n                  .then((doc) => {\n                    dispatch(signIn(doc.data()));\n                  })\n              )\n          )\n          .catch((response) => {\n            setErrorMessage(response.message);\n            return;\n          });\n      }\n    }\n\n    if (data.email !== user.email) {\n      if (data.currPassword === \"\") {\n        setErrorMessage(\"Enter password to change email\");\n        return;\n      } else {\n        auth\n          .signInWithEmailAndPassword(user.email, data.currPassword)\n          .then(() => {\n            auth.currentUser\n              .updateEmail(data.email)\n              .then(() => {\n                userDataDb\n                  .doc(auth.currentUser.uid)\n                  .update({\n                    email: data.email,\n                  })\n                  .then(() =>\n                    userDataDb\n                      .doc(auth.currentUser.uid)\n                      .get()\n                      .then((doc) => dispatch(signIn(doc.data())))\n                  );\n              })\n              .catch((response) => {\n                setErrorMessage(response.message);\n                error = true;\n                return;\n              });\n          })\n          .catch((response) => {\n            setErrorMessage(response.message);\n            return;\n          });\n      }\n    }\n\n    if (data.currPassword !== \"\" && data.newPassword !== \"\") {\n      if (data.newPasswordConfirm !== data.newPassword) {\n        setErrorMessage(\"New password must match\");\n        return;\n      } else {\n        auth\n          .signInWithEmailAndPassword(user.email, data.currPassword)\n          .then(() => {\n            if (data.currPassword === data.newPassword) {\n              setErrorMessage(\n                \"New password must be different than old password\"\n              );\n              return;\n            } else {\n              auth.currentUser\n                .updatePassword(data.newPassword)\n                .then(() => {\n                  dispatch(setPasswordLength(data.newPassword.length));\n                })\n                .catch((response) => {\n                  // sets error message if something goes wrong\n                  setErrorMessage(response.message);\n                  return;\n                });\n            }\n          })\n          .catch((response) => {\n            // sets error message if something goes wrong\n            setErrorMessage(response.message);\n            return;\n          });\n      }\n    }\n    setInForm(false);\n  };\n\n  return (\n    <Main title={\"Dashboard\"} description={\"Dashboard\"}>\n      <StyledHomepage>\n        <SideBar />\n        <Header />\n        <Hamburger />\n        <StyledBody>\n          <BodyHeader>\n            <TitleContainer>\n              <StyledTitle>Profile</StyledTitle>\n            </TitleContainer>\n          </BodyHeader>\n          <ProfileCard>\n            <form id=\"profileForm\">\n              <StyledIcon\n                src={gearIcon}\n                onClick={() => {\n                  setInForm(!inForm);\n                  setErrorMessage(\"\");\n                }}\n              />\n              <StyledSectionHeader>Display Name</StyledSectionHeader>\n              {inForm ? (\n                <StyledInput\n                  name=\"name\"\n                  defaultValue={user.displayName}\n                ></StyledInput>\n              ) : (\n                <UserData>{user.displayName}</UserData>\n              )}\n              <StyledSectionHeader>Email</StyledSectionHeader>\n              {inForm ? (\n                <StyledInput\n                  type=\"email\"\n                  name=\"email\"\n                  deafultValue={user.email}\n                ></StyledInput>\n              ) : (\n                <UserData>{user.email}</UserData>\n              )}\n              {inForm ? (\n                <>\n                  <StyledSectionHeader>Current Password</StyledSectionHeader>\n                  <StyledInput name=\"currPassword\" type=\"password\" />\n                  <StyledSectionHeader>New Password</StyledSectionHeader>\n                  <StyledInput name=\"newPassword\" type=\"password\" />\n                  <StyledSectionHeader>\n                    Confirm New Password\n                  </StyledSectionHeader>\n                  <StyledInput name=\"newPasswordConfirm\" type=\"password\" />\n                </>\n              ) : (\n                <>\n                  <StyledSectionHeader>Password</StyledSectionHeader>\n                  <UserData>{\"*\".repeat(user.passwordLength)}</UserData>\n                </>\n              )}\n              <StyledError>{errorMessage}</StyledError>\n              {inForm && (\n                <StyledSubmitButton\n                  style={{ backgroundColor: `${Constants.COLOR.LIGHT_GREEN}` }}\n                  onClick={handleSubmit}\n                >\n                  Submit\n                </StyledSubmitButton>\n              )}\n            </form>\n          </ProfileCard>\n          <StyledSubmitButton\n            data-test=\"home\"\n            onClick={() => history.push(\"/student/home\")}\n          >\n            Back to Home\n          </StyledSubmitButton>\n        </StyledBody>\n      </StyledHomepage>\n    </Main>\n  );\n};\n\nconst StyledHomepage = styled.div``;\n\nconst StyledIcon = styled.img`\n  width: 30px;\n  position: absolute;\n  right: 20px;\n  top: 20px;\n  &:hover {\n    filter: brightness(110%);\n    cursor: pointer;\n  }\n`;\n\nconst StyledError = styled.p`\n  color: red;\n`;\n\nconst StyledInput = styled.input`\n  font-size: 18px;\n  width: 50%;\n  margin: 10px;\n  background-color: white;\n  padding: 10px;\n  border-radius: 0.5em;\n`;\n\nconst StyledBody = styled.div`\n  margin-top: ${Constants.HEADER_HEIGHT};\n  margin-left: ${Constants.SIDEBAR_WIDTH};\n  padding: 0 50px;\n`;\n\nconst StyledSubmitButton = styled(StyledButton)`\n  font-size: 18px;\n  padding: 5px;\n  margin: 30px;\n  width: 150px;\n  background-color: ${Constants.COLOR.DARK_GREEN};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst BodyHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst ProfileCard = styled.div`\n  background-color: ${Constants.COLOR.DARK_GREEN};\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n  padding: 10px;\n  margin: 0px 10px;\n  border-radius: 0.5em;\n`;\n\nconst StyledTitle = styled.p`\n  color: ${Constants.COLOR.GREEN};\n  line-height: 36px;\n  font-size: 30px;\n  margin-right: 20px;\n`;\n\nconst TitleContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledSectionHeader = styled.p`\n  font-size: 20px;\n  line-height: 43px;\n  font-weight: 500;\n`;\n\nconst UserData = styled.p`\n  font-size: 18px;\n  width: 50%;\n  margin: 10px;\n  background-color: white;\n  padding: 10px;\n  border-radius: 0.5em;\n`;\n\nexport default ModulesHomepage;\n","import { Constants } from \"../../data/constants\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.div`\n  background-color: ${Constants.COLOR.LIGHT_GREEN};\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  color: white;\n  font-weight: bold;\n  &:hover {\n    filter: brightness(110%);\n    cursor: pointer;\n  }\n`;\n\nexport default StyledButton;\n"],"sourceRoot":""}