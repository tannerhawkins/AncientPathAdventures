{"version":3,"sources":["data/constants.js","components/Template/Button.js","app/module/actions.js","components/Template/QuestionCard.js","pages/Student/Module/ModuleSummary.js","pages/Student/Module/ModuleText.js","components/Template/Quiz.js","pages/Student/Module/ModuleQuiz.js","pages/Student/Module/ModuleVideo.js","pages/Student/Module/Module.js"],"names":["Constants","COLOR","LIGHT_GREEN","DARK_GREEN","GREEN","WHITE","DARK_BLUE","TEAL","GRAY","HEADER_HEIGHT","SIDEBAR_WIDTH","EMPTY_MODULE","title","description","public","creator","undefined","steps","MOCK_MODULE","type","data","StyledButton","styled","div","setCurrentStep","step","payload","setSelectedModule","moduleToAdd","addStep","setSteps","setTitle","setDescription","QuestionSection","QuestionCount","QuestionText","AnswerSection","AnswerButton","button","QuestionCard","props","currentQuestion","questions","length","questionText","answerOptions","map","answerOption","onClick","inEdit","handleAnswerOptionClick","isCorrect","style","height","answerText","indexOf","Body","StyledTitle","p","StyledBody","StyledButtonContainer","StyledSubmitButton","Button","ModuleSummary","dispatch","useDispatch","currentStep","useSelector","selectCurrentStep","history","useHistory","module","selectSelectedModule","push","StyledQuestionContainer","StyledQuestion","ModuleText","stepData","selectCurrentStepData","dangerouslySetInnerHTML","__html","StyledQuiz","ScoreSection","Quiz","setCurrentQuestion","useState","showScore","setShowScore","score","setScore","nextQuestion","ModuleQuiz","Video","iframe","img","ModuleVideo","frameborder","src","allow","sandbox","allowFullScreen","ModuleWrapper","Module","currentModule","currentStepData","Main","stepType","StepPage"],"mappings":"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","file":"static/js/17.2d204278.chunk.js","sourcesContent":["export const Constants = {\n  COLOR: {\n    LIGHT_GREEN: \"#A2E1D0\",\n    DARK_GREEN: \"#6BAE9B\",\n    GREEN: \"#7DCBB5\",\n    WHITE: \"#e9e9ff\",\n    DARK_BLUE: \"#373B53\",\n    TEAL: \"#B5FFEA\",\n    GRAY: \"#E5E5E5\",\n  },\n  HEADER_HEIGHT: \"80px\",\n  SIDEBAR_WIDTH: \"80px\",\n  EMPTY_MODULE: {\n    title: \"\",\n    description: \"\",\n    public: true,\n    creator: undefined,\n    steps: [],\n  },\n  MOCK_MODULE: {\n    title: \"Mock Module\",\n    description: \"This module is used for testing and development\",\n    public: true,\n    creator: \"someteacherIDhere\",\n    steps: [\n      {\n        type: \"text\",\n        data: {\n          // Some kind of text data here (title, description, etc.)\n        },\n      },\n      {\n        type: \"video\",\n        data: {\n          // Some kind of reference to a video stored somewhere in Firebase and maybe a video title\n        },\n      },\n      {\n        type: \"quiz\",\n        data: {\n          // Some kind of quiz data here (array of questions, title, etc.)\n        },\n      },\n    ],\n  },\n};\n","import { Constants } from \"../../data/constants\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.div`\n  background-color: ${Constants.COLOR.LIGHT_GREEN};\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  color: white;\n  font-weight: bold;\n  &:hover {\n    filter: brightness(110%);\n    cursor: pointer;\n  }\n`;\n\nexport default StyledButton;\n","export const setCurrentStep = (step) => {\n  return {\n    type: \"SET_CURRENT_STEP\",\n    payload: step,\n  };\n};\n\nexport const setSelectedModule = (moduleToAdd) => {\n  return {\n    type: \"SET_SELECTED_MODULE\",\n    payload: moduleToAdd,\n  };\n};\n\nexport const addStep = (step) => {\n  return {\n    type: \"ADD_STEP\",\n    payload: step,\n  };\n};\n\nexport const setSteps = (steps) => {\n  return {\n    type: \"SET_STEPS\",\n    payload: steps,\n  };\n};\n\nexport const setTitle = (title) => {\n  return {\n    type: \"SET_TITLE\",\n    payload: title,\n  };\n};\n\nexport const setDescription = (description) => {\n  return {\n    type: \"SET_DESCRIPTION\",\n    payload: description,\n  };\n};\n","import styled from \"styled-components\";\nimport { Constants } from \"../../data/constants\";\n\nconst QuestionCard = (props) => {\n  return (\n    <>\n      <QuestionSection>\n        <QuestionCount>\n          <span>Question {props.currentQuestion + 1}</span>/\n          {props.questions.length}\n        </QuestionCount>\n        <QuestionText>\n          {props.questions[props.currentQuestion].questionText}\n        </QuestionText>\n      </QuestionSection>\n      <AnswerSection>\n        {props.questions[props.currentQuestion].answerOptions.map(\n          (answerOption) => {\n            return (\n              <AnswerButton\n                onClick={() =>\n                  !props.inEdit\n                    ? props.handleAnswerOptionClick(answerOption.isCorrect)\n                    : undefined\n                }\n                style={{\n                  height: `${\n                    100 /\n                    props.questions[props.currentQuestion].answerOptions.length\n                  }%`,\n                }}\n                key={props.questions[\n                  props.currentQuestion\n                ].answerOptions.indexOf(answerOption)}\n              >\n                {answerOption.answerText}\n              </AnswerButton>\n            );\n          }\n        )}\n      </AnswerSection>\n    </>\n  );\n};\n\nconst QuestionSection = styled.div`\n  width: 100%;\n  position: relative;\n`;\n\nconst QuestionCount = styled.div`\n  margin-bottom: 20px;\n\n  span {\n    font-size: 40px;\n  }\n`;\n\nconst QuestionText = styled.div`\n  font-size: 50px;\n  margin-bottom: 12px;\n`;\n\nconst AnswerSection = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst AnswerButton = styled.button`\n  width: 100%;\n  font-size: 35px;\n  background-color: ${Constants.COLOR.LIGHT_GREEN};\n  border-radius: 15px;\n  display: flex;\n  padding: 20px;\n  justify-content: flex-start;\n  align-items: center;\n  border: 5px solid ${Constants.COLOR.DARK_GREEN};\n  cursor: pointer;\n  margin: 10px 0px;\n`;\n\nexport default QuestionCard;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  selectCurrentStep,\n  selectSelectedModule,\n} from \"../../../app/module/selectors\";\nimport { setCurrentStep } from \"../../../app/module/actions\";\nimport { useHistory } from \"react-router\";\nimport { Constants } from \"../../../data/constants\";\nimport Button from \"../../../components/Template/Button\";\n\nconst ModuleSummary = () => {\n  const dispatch = useDispatch();\n  const currentStep = useSelector(selectCurrentStep);\n  const history = useHistory();\n  const module = useSelector(selectSelectedModule);\n\n  return (\n    <Body>\n      <StyledButtonContainer>\n        <StyledSubmitButton onClick={() => history.push(\"/student/home\")}>\n          Back to Home\n        </StyledSubmitButton>\n      </StyledButtonContainer>\n      <StyledTitle>This is the {module.title} Summary Page:</StyledTitle>\n      <StyledBody>{module.description}</StyledBody>\n      The summary of this page is simple and short that you can read it very\n      quick for the purpose of this assignment called the \"Walking Skeleton\".\n      Note: You CANNOT back out of a module once you begin!\n      <StyledButtonContainer>\n        <StyledSubmitButton\n          onClick={() => dispatch(setCurrentStep(currentStep + 1))}\n        >\n          Start Module\n        </StyledSubmitButton>\n      </StyledButtonContainer>\n    </Body>\n  );\n};\n\nconst Body = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst StyledTitle = styled.p`\n  color: ${Constants.COLOR.GREEN};\n  line-height: 36px;\n  font-size: 30px;\n  padding-left: 30px;\n`;\n\nconst StyledBody = styled.div`\n  margin-top: ${Constants.HEADER_HEIGHT};\n  margin-left: ${Constants.SIDEBAR_WIDTH};\n  padding: 0 50px;\n`;\n\nconst StyledButtonContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n  padding-top: 30px;\n  margin-left: ${Constants.SIDEBAR_WIDTH};\n`;\n\nconst StyledSubmitButton = styled(Button)`\n  font-size: 25px;\n  height: 70px;\n  padding: 0 5px;\n  min-width: 120px;\n  background-color: ${Constants.COLOR.DARK_GREEN};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport default ModuleSummary;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  selectCurrentStep,\n  selectCurrentStepData,\n  selectSelectedModule,\n} from \"../../../app/module/selectors\";\nimport { setCurrentStep } from \"../../../app/module/actions\";\nimport { Constants } from \"../../../data/constants\";\nimport Button from \"../../../components/Template/Button\";\n\nconst ModuleText = () => {\n  const dispatch = useDispatch();\n  const stepData = useSelector(selectCurrentStepData);\n  const currentStep = useSelector(selectCurrentStep);\n\n  return (\n    <Body>\n      <StyledTitle>This is the Module Text Page</StyledTitle>\n      <StyledBody dangerouslySetInnerHTML={{ __html: stepData }} />\n      <StyledQuestionContainer>\n        <StyledQuestion></StyledQuestion>\n      </StyledQuestionContainer>\n      <StyledButtonContainer>\n        <StyledSubmitButton\n          onClick={() => dispatch(setCurrentStep(currentStep + 1))}\n        >\n          Next Step\n        </StyledSubmitButton>\n      </StyledButtonContainer>\n    </Body>\n  );\n};\n\nconst Body = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst StyledTitle = styled.p`\n  color: ${Constants.COLOR.GREEN};\n  line-height: 36px;\n  font-size: 30px;\n  padding-left: 30px;\n`;\n\nconst StyledBody = styled.div`\n  margin-top: ${Constants.HEADER_HEIGHT};\n  margin-left: ${Constants.SIDEBAR_WIDTH};\n  padding: 0 50px;\n`;\n\nconst StyledButtonContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n  padding-top: 30px;\n  margin-left: ${Constants.SIDEBAR_WIDTH};\n`;\n\nconst StyledQuestionContainer = styled.div``;\n\nconst StyledQuestion = styled.div``;\n\nconst StyledSubmitButton = styled(Button)`\n  font-size: 25px;\n  height: 70px;\n  padding: 0 5px;\n  min-width: 120px;\n  background-color: ${Constants.COLOR.DARK_GREEN};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport default ModuleText;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  selectCurrentStep,\n  selectCurrentStepData,\n} from \"../../app/module/selectors\";\nimport { setCurrentStep } from \"../../app/module/actions\";\nimport { Constants } from \"../../data/constants\";\nimport Button from \"../../components/Template/Button\";\nimport { useState } from \"react\";\nimport QuestionCard from \"./QuestionCard\";\n\nconst Quiz = () => {\n  const dispatch = useDispatch();\n  const currentStep = useSelector(selectCurrentStep);\n  const stepData = useSelector(selectCurrentStepData);\n  const questions = stepData.questions;\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n  return (\n    <StyledQuiz>\n      {showScore ? (\n        <ScoreSection>\n          You scored {score} out of {questions.length}\n          <StyledSubmitButton\n            onClick={() => dispatch(setCurrentStep(currentStep + 1))}\n          >\n            Submit Quiz\n          </StyledSubmitButton>\n        </ScoreSection>\n      ) : (\n        <QuestionCard\n          currentQuestion={currentQuestion}\n          questions={questions}\n          handleAnswerOptionClick={handleAnswerOptionClick}\n        />\n      )}\n    </StyledQuiz>\n  );\n};\n\nconst StyledQuiz = styled.div`\n  background-color: ${Constants.COLOR.DARK_GREEN};\n  width: 90%;\n  min-height: 200px;\n  height: 90vh;\n  border-radius: 15px;\n  box-sizing: border-box;\n  padding: 20px;\n  box-shadow: 10px 10px 42px 0px rgba(0, 0, 0, 0.75);\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nconst ScoreSection = styled.div`\n  display: flex;\n  font-size: 24px;\n  align-items: center;\n  flex-direction: column;\n  align-self: center;\n`;\n\nconst QuestionSection = styled.div`\n  width: 100%;\n  position: relative;\n`;\n\nconst QuestionCount = styled.div`\n  margin-bottom: 20px;\n\n  span {\n    font-size: 40px;\n  }\n`;\n\nconst QuestionText = styled.div`\n  font-size: 50px;\n  margin-bottom: 12px;\n`;\n\nconst AnswerSection = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst AnswerButton = styled.button`\n  width: 100%;\n  font-size: 35px;\n  background-color: ${Constants.COLOR.LIGHT_GREEN};\n  border-radius: 15px;\n  display: flex;\n  padding: 20px;\n  justify-content: flex-start;\n  align-items: center;\n  border: 5px solid ${Constants.COLOR.DARK_GREEN};\n  cursor: pointer;\n  margin: 10px 0px;\n`;\n\nconst StyledSubmitButton = styled(Button)`\n  font-size: 25px;\n  height: 70px;\n  padding: 0 5px;\n  margin-top: 30px;\n  min-width: 120px;\n  background-color: ${Constants.COLOR.GREEN};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport default Quiz;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { selectCurrentStep } from \"../../../app/module/selectors\";\nimport Quiz from \"../../../components/Template/Quiz\";\n\nconst ModuleQuiz = () => {\n  const dispatch = useDispatch();\n  const currentStep = useSelector(selectCurrentStep);\n\n  return (\n    <Body>\n      <Quiz />\n    </Body>\n  );\n};\n\nconst Body = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default ModuleQuiz;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  selectCurrentStep,\n  selectCurrentStepData,\n} from \"../../../app/module/selectors\";\nimport { setCurrentStep } from \"../../../app/module/actions\";\nimport { Constants } from \"../../../data/constants\";\nimport Button from \"../../../components/Template/Button\";\n\nconst ModuleVideo = () => {\n  const dispatch = useDispatch();\n  const currentStep = useSelector(selectCurrentStep);\n  const stepData = useSelector(selectCurrentStepData);\n\n  return (\n    <Body>\n      <StyledTitle>This is the Module Video Page</StyledTitle>\n      <Video\n        frameborder=\"0\"\n        src={`${stepData}`}\n        allow={\"autoplay;\"}\n        sandbox=\"allow-scripts allow-same-origin\"\n        allowFullScreen\n      />\n      <StyledButtonContainer>\n        <StyledSubmitButton\n          onClick={() => dispatch(setCurrentStep(currentStep + 1))}\n        >\n          Next Step\n        </StyledSubmitButton>\n      </StyledButtonContainer>\n    </Body>\n  );\n};\n\nconst Video = styled.iframe`\n  width: 90vw;\n  height: 90vh;\n`;\n\nconst Body = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst img = styled.img`\n  padding-left: 30px;\n`;\n\nconst StyledTitle = styled.p`\n  color: ${Constants.COLOR.GREEN};\n  line-height: 36px;\n  font-size: 30px;\n  padding-left: 30px;\n`;\n\nconst StyledBody = styled.div`\n  margin-top: ${Constants.HEADER_HEIGHT};\n  margin-left: ${Constants.SIDEBAR_WIDTH};\n  padding: 0 50px;\n`;\n\nconst StyledButtonContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n  padding-top: 30px;\n  margin-left: ${Constants.SIDEBAR_WIDTH};\n`;\n\nconst StyledSubmitButton = styled(Button)`\n  font-size: 25px;\n  height: 70px;\n  padding: 0 5px;\n  min-width: 120px;\n  background-color: ${Constants.COLOR.DARK_GREEN};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport default ModuleVideo;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  selectCurrentStep,\n  selectSelectedModule,\n} from \"../../../app/module/selectors\";\nimport Main from \"../../../layouts/Main\";\nimport ModuleSummary from \"./ModuleSummary\";\nimport ModuleText from \"./ModuleText\";\nimport ModuleQuiz from \"./ModuleQuiz\";\nimport ModuleVideo from \"./ModuleVideo\";\nimport { useHistory } from \"react-router\";\n\nconst Module = () => {\n  const history = useHistory();\n  const currentModule = useSelector(selectSelectedModule);\n  const currentStep = useSelector(selectCurrentStep);\n  const currentStepData =\n    currentStep === -1 ? undefined : currentModule?.steps[currentStep];\n\n  const StepPage = () => {\n    const stepType = currentStepData.type;\n    if (stepType === \"text\") {\n      return <ModuleText />;\n    } else if (stepType === \"video\") {\n      return <ModuleVideo />;\n    } else if (stepType === \"quiz\") {\n      return <ModuleQuiz />;\n    }\n    history.push(\"/student/home\");\n    return;\n  };\n\n  return (\n    <Main title={currentModule?.title} description={\"Module Page\"}>\n      <ModuleWrapper>\n        {currentStep === -1 && <ModuleSummary />}\n        {currentStepData && StepPage()}\n        {currentStep >= currentModule?.steps?.length &&\n          history.push(\"/student/home\")}\n      </ModuleWrapper>\n    </Main>\n  );\n};\n\nconst ModuleWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport default Module;\n"],"sourceRoot":""}