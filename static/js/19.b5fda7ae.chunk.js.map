{"version":3,"sources":["pages/Teacher/Module/AddModule.js","components/Template/Button.js","app/module/actions.js"],"names":["StyledBody","styled","div","Constants","HEADER_HEIGHT","SIDEBAR_WIDTH","StyledSectionTitle","p","StyledButtonContainer","StyledDashboardButton","Button","COLOR","LIGHT_GREEN","AddModule","dispatch","useDispatch","history","useHistory","modulesList","useSelector","selectModuleList","currentClass","selectCurrentClass","moduleCards","filter","module","modules","includes","mid","map","moduleToAdd","onClick","handleClick","classDataDb","doc","cid","update","firebase","firestore","FieldValue","arrayUnion","then","get","data","students","forEach","student","userDataDb","uid","userdoc","classList","oldClass","cla","newClass","index","i","length","getIndex","splice","setCurrentClass","title","description","setSelectedModule","EMPTY_MODULE","push","StyledButton","setCurrentStep","step","type","payload","addStep","setSteps","steps","setTitle","setDescription"],"mappings":"iIAAA,uJAkBA,MAyGMA,EAAaC,IAAOC,GAAI;gBACdC,IAAUC;iBACTD,IAAUE;;EAIrBC,EAAqBL,IAAOM,CAAE;;;;EAc9BC,GARkBP,IAAOC,GAAI;;;;;;EAQLD,IAAOC,GAAI;;;;;GAOnCO,EAAwBR,YAAOS,IAAQ;;;;;sBAKvBP,IAAUQ,MAAMC;;;;EAMvBC,UA/IG,KAChB,MAAMC,EAAWC,cACXC,EAAUC,cACVC,EAAcC,YAAYC,KAC1BC,EAAeF,YAAYG,KAM3BC,EAAW,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAChBM,QAAQC,KAAW,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAcK,QAAQC,SAASF,EAAOG,QAC3DC,KAAKC,GACJ,cAAC,IAAD,CACEC,QAAS,IAAMC,EAAYF,EAAYF,KACvCH,OAAQK,EAAYF,KACfE,EAAYF,OAIjBI,EAAeJ,IACnBK,IACGC,IAAIb,EAAac,KACjBC,OAAO,CACNV,QAASW,IAASC,UAAUC,WAAWC,WAAWZ,KAEnDa,KACCR,IACGC,IAAIb,EAAac,KACjBO,MACAD,MAAMP,IACLA,EAAIS,OAAOC,SAASC,SAASC,IAC3BC,IACGb,IAAIY,EAAQE,KACZN,MACAD,MAAMQ,IACL,MAAMC,EAAYD,EAAQN,OAAOO,UAC3BC,EAAWD,EAAU1B,QACxB4B,GAAQA,EAAIjB,MAAQd,EAAac,MAClC,GACIkB,EAAW,IACZF,EACHzB,QAAS,IAAIyB,EAASzB,QAASE,IAU3B0B,EARW,MACf,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAUM,OAAQD,IACpC,GAAIL,EAAUK,GAAGpB,MAAQgB,EAAShB,IAChC,OAAOoB,EAGX,OAAQ,GAEIE,GACdP,EAAUQ,OAAOJ,EAAO,EAAGD,GAC3BN,IAAWb,IAAIY,EAAQE,KAAKZ,OAAO,CACjCc,UAAWA,aAKpBT,KACCR,IACGC,IADH,OACOb,QADP,IACOA,OADP,EACOA,EAAcc,KAClBO,MACAD,MAAMP,GAAQpB,EAAS6C,YAAgBzB,EAAIS,cAexD,OACE,eAAC,IAAD,CAAMiB,MAAO,eAAgBC,YAAa,eAA1C,UACE,cAAC,IAAD,IACA,cAAC,IAAD,IACA,eAAC7D,EAAD,WACE,cAACM,EAAD,+BACA,cAAC,IAAD,CAAiBiB,YAAaA,IAC9B,eAACf,EAAD,WACE,cAACC,EAAD,CACEsB,QAnBoB,KAC5BjB,EAASgD,YAAkB3D,IAAU4D,eACrC/C,EAAQgD,KAAM,kBAkBN,YAAU,gBAFZ,+BAMA,cAACvD,EAAD,CACEsB,QAAS,IAAMf,EAAQgD,KAAM,QAC7B,YAAU,OAFZ,0C,gCC/GV,YAGA,MAAMC,EAHN,MAGqBhE,EAAOC,GAAI;sBACVC,IAAUQ,MAAMC;;;;;;;;;;;;EAcvBqD,O,gCClBf,4MAAO,MAAMC,EAAkBC,IACtB,CACLC,KAAM,mBACNC,QAASF,IAIAL,EAAqBhC,IACzB,CACLsC,KAAM,sBACNC,QAASvC,IAIAwC,EAAWH,IACf,CACLC,KAAM,WACNC,QAASF,IAIAI,EAAYC,IAChB,CACLJ,KAAM,YACNC,QAASG,IAIAC,EAAYb,IAChB,CACLQ,KAAM,YACNC,QAAST,IAIAc,EAAkBb,IACtB,CACLO,KAAM,kBACNC,QAASR","file":"static/js/19.b5fda7ae.chunk.js","sourcesContent":["import React from \"react\";\nimport Main from \"../../../layouts/Main\";\nimport SideBar from \"../../../components/Template/SideBar\";\nimport Header from \"../../../components/Teacher/Header\";\nimport styled from \"styled-components\";\nimport { Constants } from \"../../../data/constants\";\nimport { classDataDb, userDataDb } from \"../../../data/firebase\";\nimport ModuleCard from \"../../../components/Template/ModuleCard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectModuleList } from \"../../../app/account/selectors\";\nimport { selectCurrentClass } from \"../../../app/class/selectors\";\nimport { setCurrentClass } from \"../../../app/class/actions\";\nimport firebase from \"firebase\";\nimport Button from \"../../../components/Template/Button\";\nimport { useHistory } from \"react-router\";\nimport { setSelectedModule } from \"../../../app/module/actions\";\nimport ModuleContainer from \"../../../components/Template/ModuleContainer\";\n\nconst AddModule = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const modulesList = useSelector(selectModuleList);\n  const currentClass = useSelector(selectCurrentClass);\n\n  // This should be edited to fit style that you would like\n  // This turns the modules in the modulesList to divs to be displayed\n  // This should also include buttons or the ability to be clicked or something to be\n  // able to select the module to be added and assigned to the class\n  const moduleCards = modulesList\n    ?.filter((module) => !currentClass?.modules.includes(module.mid))\n    .map((moduleToAdd) => (\n      <ModuleCard\n        onClick={() => handleClick(moduleToAdd.mid)}\n        module={moduleToAdd.mid}\n        key={moduleToAdd.mid}\n      />\n    ));\n\n  const handleClick = (mid) => {\n    classDataDb\n      .doc(currentClass.cid)\n      .update({\n        modules: firebase.firestore.FieldValue.arrayUnion(mid),\n      })\n      .then(\n        classDataDb\n          .doc(currentClass.cid)\n          .get()\n          .then((doc) => {\n            doc.data().students.forEach((student) => {\n              userDataDb\n                .doc(student.uid)\n                .get()\n                .then((userdoc) => {\n                  const classList = userdoc.data().classList;\n                  const oldClass = classList.filter(\n                    (cla) => cla.cid === currentClass.cid\n                  )[0];\n                  const newClass = {\n                    ...oldClass,\n                    modules: [...oldClass.modules, mid],\n                  };\n                  const getIndex = () => {\n                    for (let i = 0; i < classList.length; i++) {\n                      if (classList[i].cid === oldClass.cid) {\n                        return i;\n                      }\n                    }\n                    return -1;\n                  };\n                  const index = getIndex();\n                  classList.splice(index, 1, newClass);\n                  userDataDb.doc(student.uid).update({\n                    classList: classList,\n                  });\n                });\n            });\n          })\n          .then(\n            classDataDb\n              .doc(currentClass?.cid)\n              .get()\n              .then((doc) => dispatch(setCurrentClass(doc.data())))\n          )\n      );\n  };\n\n  const handleCreateNewModule = () => {\n    dispatch(setSelectedModule(Constants.EMPTY_MODULE));\n    history.push(`create-module`);\n  };\n\n  // I think this page should be some kind of place to search for already created modules\n  // There should be some kind of search functionality that connects to firebase to allow\n  // teachers to search through modules created by APA and by other teachers\n  // Also should include a button to go to the create a module page\n  // FOR NOW NO SEARCH FUNCTIONALITY, JUST SHOW ALL AVAILABLE MODULES\n  return (\n    <Main title={\"Add a Module\"} description={\"Add a Module\"}>\n      <SideBar />\n      <Header />\n      <StyledBody>\n        <StyledSectionTitle>Existing Modules</StyledSectionTitle>\n        <ModuleContainer moduleCards={moduleCards} />\n        <StyledButtonContainer>\n          <StyledDashboardButton\n            onClick={handleCreateNewModule}\n            data-test=\"create-module\"\n          >\n            CREATE NEW MODULE\n          </StyledDashboardButton>\n          <StyledDashboardButton\n            onClick={() => history.push(`home`)}\n            data-test=\"back\"\n          >\n            BACK TO DASHBOARD\n          </StyledDashboardButton>\n        </StyledButtonContainer>\n      </StyledBody>\n    </Main>\n  );\n};\n\nconst StyledBody = styled.div`\n  margin-top: ${Constants.HEADER_HEIGHT};\n  margin-left: ${Constants.SIDEBAR_WIDTH};\n  padding: 0 50px;\n`;\n\nconst StyledSectionTitle = styled.p`\n  font-size: 36px;\n  line-height: 43px;\n  font-weight: 500;\n`;\n\nconst ExistingModules = styled.div`\n  display: flex;\n  width: 100%;\n  flex-wrap: no-wrap;\n  overflow: auto;\n  height: 300px;\n`;\n\nconst StyledButtonContainer = styled.div`\n  display: flex;\n  align-items: space-around;\n  justify-content: space-around;\n  width: 60%;\n`;\n\nconst StyledDashboardButton = styled(Button)`\n  font-size: 15px;\n  height: 50px;\n  padding: 0 5px;\n  width: 220px;\n  background-color: ${Constants.COLOR.LIGHT_GREEN};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport default AddModule;\n","import { Constants } from \"../../data/constants\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.div`\n  background-color: ${Constants.COLOR.LIGHT_GREEN};\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  color: white;\n  font-weight: bold;\n  &:hover {\n    filter: brightness(110%);\n    cursor: pointer;\n  }\n`;\n\nexport default StyledButton;\n","export const setCurrentStep = (step) => {\n  return {\n    type: \"SET_CURRENT_STEP\",\n    payload: step,\n  };\n};\n\nexport const setSelectedModule = (moduleToAdd) => {\n  return {\n    type: \"SET_SELECTED_MODULE\",\n    payload: moduleToAdd,\n  };\n};\n\nexport const addStep = (step) => {\n  return {\n    type: \"ADD_STEP\",\n    payload: step,\n  };\n};\n\nexport const setSteps = (steps) => {\n  return {\n    type: \"SET_STEPS\",\n    payload: steps,\n  };\n};\n\nexport const setTitle = (title) => {\n  return {\n    type: \"SET_TITLE\",\n    payload: title,\n  };\n};\n\nexport const setDescription = (description) => {\n  return {\n    type: \"SET_DESCRIPTION\",\n    payload: description,\n  };\n};\n"],"sourceRoot":""}