{"version":3,"sources":["routes/StudentRoutes.js","app/module/selectors.js"],"names":["ModulesHomepage","lazy","Module","AddClass","StudentRoutes","match","inModule","useSelector","selectIsInModule","path","component","to","selectModuleState","createSelector","store","getState","state","module","selectCurrentStep","currentStep","selectSelectedModule","selectedModule","selectSelectedStep","selectedStep","selectSteps","steps","selectNextID","length","Math","max","map","step","id","selectCurrentStepData","data","selectCurrentStepPercentage"],"mappings":"iIAAA,iDAKA,MAAMA,EAAkBC,gBAAK,IAAM,8DAC7BC,EAASD,gBAAK,IAAM,qEACpBE,EAAWF,gBAAK,IAAM,uDAgBbG,UAdO,EAAGC,YACvB,MAAMC,EAAWC,YAAYC,KAE7B,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAO,GAAEJ,EAAMI,cAAeC,UAAWR,IAC/CI,GAAY,cAAC,IAAD,CAAUK,GAAK,GAAEN,EAAMI,gBACpC,cAAC,IAAD,CAAOA,KAAO,GAAEJ,EAAMI,iBAAkBC,UAAWP,IACnD,cAAC,IAAD,CAAOM,KAAO,GAAEJ,EAAMI,YAAaC,UAAWV,IAC9C,cAAC,IAAD,CAAUW,GAAK,GAAEN,EAAMI,mB,gCClB7B,oSAGA,MAEMG,EAAoBC,aAFN,IAAMC,IAAMC,aAEuBC,GAAUA,EAAMC,SAE1DT,EAAmBK,YAC9BD,GACCI,GAAUA,EAAMV,WAGNY,EAAoBL,YAC/BD,GACCI,GAAUA,EAAMG,cAGNC,EAAuBP,YAClCD,GACCI,GAAUA,EAAMK,iBAGNC,EAAqBT,YAChCD,GACCI,GAAUA,EAAMO,eAGNC,EAAcX,YACzBO,GACCH,GAAD,OAAYA,QAAZ,IAAYA,OAAZ,EAAYA,EAAQQ,QAGTC,EAAeb,YAAeW,GAAcC,GAClC,IAAjBA,EAAME,OACD,EAEAC,KAAKC,OAAOJ,EAAMK,KAAKC,GAASA,EAAKC,MAAO,IAI1CC,EAAwBpB,YACnCK,EACAM,GACA,CAACL,EAAaM,IAAUA,EAAMN,GAAae,OAGhCC,EAA8BtB,YACzCK,EACAM,GACA,CAACL,EAAaM,KAAYN,EAAc,IAAMM,EAAME,OAAS,GAAM","file":"static/js/26.23218be1.chunk.js","sourcesContent":["import React, { lazy } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { selectIsInModule } from \"../app/module/selectors\";\n\nconst ModulesHomepage = lazy(() => import(\"../pages/Student/ModulesHomepage\"));\nconst Module = lazy(() => import(\"../pages/Student/Module/Module\"));\nconst AddClass = lazy(() => import(\"../pages/Student/AddClass\"));\n\nconst StudentRoutes = ({ match }) => {\n  const inModule = useSelector(selectIsInModule);\n\n  return (\n    <Switch>\n      <Route path={`${match.path}/module`} component={Module} />\n      {inModule && <Redirect to={`${match.path}/module`} />}\n      <Route path={`${match.path}/add-class`} component={AddClass} />\n      <Route path={`${match.path}/home`} component={ModulesHomepage} />\n      <Redirect to={`${match.path}/home`} />\n    </Switch>\n  );\n};\n\nexport default StudentRoutes;\n","import { createSelector } from \"reselect\";\nimport { store } from \"../store.js\";\n\nconst selectState = () => store.getState();\n\nconst selectModuleState = createSelector(selectState, (state) => state.module);\n\nexport const selectIsInModule = createSelector(\n  selectModuleState,\n  (state) => state.inModule\n);\n\nexport const selectCurrentStep = createSelector(\n  selectModuleState,\n  (state) => state.currentStep\n);\n\nexport const selectSelectedModule = createSelector(\n  selectModuleState,\n  (state) => state.selectedModule\n);\n\nexport const selectSelectedStep = createSelector(\n  selectModuleState,\n  (state) => state.selectedStep\n);\n\nexport const selectSteps = createSelector(\n  selectSelectedModule,\n  (module) => module?.steps\n);\n\nexport const selectNextID = createSelector(selectSteps, (steps) => {\n  if (steps.length === 0) {\n    return 0;\n  } else {\n    return Math.max(...steps.map((step) => step.id)) + 1;\n  }\n});\n\nexport const selectCurrentStepData = createSelector(\n  selectCurrentStep,\n  selectSteps,\n  (currentStep, steps) => steps[currentStep].data\n);\n\nexport const selectCurrentStepPercentage = createSelector(\n  selectCurrentStep,\n  selectSteps,\n  (currentStep, steps) => ((currentStep + 1) / (steps.length + 1)) * 100\n);\n"],"sourceRoot":""}