{"version":3,"sources":["components/Student/ProgressBar.js","pages/Student/Module/ModuleSummary.js","pages/Student/Module/ModuleText.js","components/Template/Quiz.js","pages/Student/Module/ModuleQuiz.js","pages/Student/Module/ModuleVideo.js","pages/Student/Module/Module.js","components/Template/Button.js","app/module/actions.js","images/Homepage/homepage-splash.png","images/Homepage/homepage-splash-2.png","components/Template/QuestionCard.js"],"names":["ProgressBar","props","percent","useSelector","selectCurrentStepPercentage","Container","StyledProgressBar","filledBackground","Constants","COLOR","TEAL","GREEN","width","styled","Bar","div","Body","homepageSplash","StyledTitle","p","StyledBody","DARK_GREEN","StyledButtonContainer","StyledSubmitButton","Button","StyledStartButtonContainer","ModuleSummary","dispatch","useDispatch","currentStep","selectCurrentStep","history","useHistory","module","selectSelectedModule","onClick","push","title","description","setCurrentStep","HEADER_HEIGHT","SIDEBAR_WIDTH","ModuleText","stepData","selectCurrentStepData","dangerouslySetInnerHTML","__html","StyledQuiz","ScoreSection","button","LIGHT_GREEN","Quiz","questions","currentQuestion","setCurrentQuestion","useState","showScore","setShowScore","score","setScore","length","QuestionCard","handleAnswerOptionClick","isCorrect","nextQuestion","ModuleQuiz","Video","iframe","ModuleVideo","frameborder","src","allow","sandbox","allowFullScreen","ModuleWrapper","Module","currentModule","currentStepData","undefined","steps","Main","stepType","type","StepPage","StyledButton","step","payload","setSelectedModule","moduleToAdd","addStep","setSteps","setTitle","setDescription","QuestionSection","QuestionCount","QuestionText","AnswerSection","AnswerButton","questionText","answerOptions","map","answerOption","inEdit","style","height","answerText","indexOf"],"mappings":"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","file":"static/js/14.3f69e1af.chunk.js","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { ProgressBar as Bar } from \"react-step-progress-bar\";\nimport styled from \"styled-components\";\nimport { selectCurrentStepPercentage } from \"../../app/module/selectors\";\nimport { Constants } from \"../../data/constants\";\n\nconst ProgressBar = (props) => {\n  const percent = useSelector(selectCurrentStepPercentage);\n\n  return (\n    <Container>\n      <StyledProgressBar\n        {...props}\n        percent={percent}\n        filledBackground={`linear-gradient(to right, ${Constants.COLOR.TEAL}, ${Constants.COLOR.GREEN})`}\n        width={\"90%\"}\n      />\n    </Container>\n  );\n};\n\nexport default ProgressBar;\n\nconst StyledProgressBar = styled(Bar)`\n  box-shadow: 0 4% 4% rgba(0, 0, 0, 0.25);\n  color: white;\n  background-color: rgba(211, 211, 211, 0.8);\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  selectCurrentStep,\n  selectSelectedModule,\n} from \"../../../app/module/selectors\";\nimport { setCurrentStep } from \"../../../app/module/actions\";\nimport { useHistory } from \"react-router\";\nimport { Constants } from \"../../../data/constants\";\nimport Button from \"../../../components/Template/Button\";\nimport \"react-step-progress-bar/styles.css\";\nimport ProgressBar from \"../../../components/Student/ProgressBar\";\nimport homepageSplash from \"../../../images/Homepage/homepage-splash-2.png\";\n\nconst ModuleSummary = () => {\n  const dispatch = useDispatch();\n  const currentStep = useSelector(selectCurrentStep);\n  const history = useHistory();\n  const module = useSelector(selectSelectedModule);\n\n  return (\n    <Body>\n      <StyledButtonContainer>\n        <StyledSubmitButton\n          data-test=\"home\"\n          onClick={() => history.push(\"/student/home\")}\n        >\n          Back to Home\n        </StyledSubmitButton>\n      </StyledButtonContainer>\n      <StyledTitle>This is the {module.title} Summary Page:</StyledTitle>\n      <StyledBody>\n        {module.description} The summary of this page is simple and short that\n        you can read it very quick for the purpose of this assignment called the\n        \"Walking Skeleton\". Note: You CANNOT back out of a module once you\n        begin!\n      </StyledBody>\n      <ProgressBar />\n      <StyledStartButtonContainer>\n        <StyledSubmitButton\n          data-test=\"start\"\n          onClick={() => dispatch(setCurrentStep(currentStep + 1))}\n        >\n          Start Module\n        </StyledSubmitButton>\n      </StyledStartButtonContainer>\n    </Body>\n  );\n};\n\nconst Body = styled.div`\n  display: flex;\n  justify-content: flex-center;\n  flex-direction: column;\n  width: 100vw;\n  height: 100vh;\n  background: url(${homepageSplash}) no-repeat;\n  background-position: 0 200px;\n`;\n\nconst StyledTitle = styled.p`\n  color: ${Constants.COLOR.GREEN};\n  margin: 0 15px;\n  font-size: 30px;\n`;\n\nconst StyledBody = styled.div`\n  margin: 3% 10%;\n  background-color: ${Constants.COLOR.DARK_GREEN};\n  border-radius: 5px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  height: 70vh;\n  color: white;\n  padding: 50px;\n`;\n\nconst StyledButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 30px;\n  margin-left: 3%;\n`;\n\nconst StyledSubmitButton = styled(Button)`\n  font-size: 14px;\n  padding: 5px;\n  min-width: 120px;\n  background-color: ${Constants.COLOR.DARK_GREEN};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledStartButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  margin: 3%;\n  margin-top: 3%;\n`;\n\nconst StyledProgressBar = styled(ProgressBar)`\n  box-shadow: 0 4% 4% rgba(0, 0, 0, 0.25);\n  color: white;\n  width: 20px;\n  height: 20px;\n  font-size: 12px;\n  background-color: rgba(211, 211, 211, 0.8);\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default ModuleSummary;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  selectCurrentStep,\n  selectCurrentStepData,\n  selectSelectedModule,\n} from \"../../../app/module/selectors\";\nimport { setCurrentStep } from \"../../../app/module/actions\";\nimport { Constants } from \"../../../data/constants\";\nimport Button from \"../../../components/Template/Button\";\nimport ProgressBar from \"../../../components/Student/ProgressBar\";\n\nconst ModuleText = () => {\n  const dispatch = useDispatch();\n  const stepData = useSelector(selectCurrentStepData);\n  const currentStep = useSelector(selectCurrentStep);\n\n  return (\n    <Body>\n      <StyledTitle>This is the Module Text Page</StyledTitle>\n      <StyledBody dangerouslySetInnerHTML={{ __html: stepData }} />\n      <ProgressBar />\n      <StyledButtonContainer>\n        <StyledSubmitButton\n          onClick={() => dispatch(setCurrentStep(currentStep + 1))}\n          data-test=\"next-step\"\n        >\n          Next Step\n        </StyledSubmitButton>\n      </StyledButtonContainer>\n    </Body>\n  );\n};\n\nconst Body = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst StyledTitle = styled.p`\n  color: ${Constants.COLOR.GREEN};\n  line-height: 36px;\n  font-size: 30px;\n  padding-left: 30px;\n`;\n\nconst StyledBody = styled.div`\n  margin-top: ${Constants.HEADER_HEIGHT};\n  margin-left: ${Constants.SIDEBAR_WIDTH};\n  padding: 0 50px;\n`;\n\nconst StyledButtonContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n  padding-top: 30px;\n  margin-left: ${Constants.SIDEBAR_WIDTH};\n`;\n\nconst StyledQuestionContainer = styled.div``;\n\nconst StyledQuestion = styled.div``;\n\nconst StyledSubmitButton = styled(Button)`\n  font-size: 25px;\n  height: 70px;\n  padding: 0 5px;\n  min-width: 120px;\n  background-color: ${Constants.COLOR.DARK_GREEN};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport default ModuleText;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  selectCurrentStep,\n  selectCurrentStepData,\n} from \"../../app/module/selectors\";\nimport { setCurrentStep } from \"../../app/module/actions\";\nimport { Constants } from \"../../data/constants\";\nimport Button from \"../../components/Template/Button\";\nimport { useState } from \"react\";\nimport QuestionCard from \"./QuestionCard\";\n\nconst Quiz = () => {\n  const dispatch = useDispatch();\n  const currentStep = useSelector(selectCurrentStep);\n  const stepData = useSelector(selectCurrentStepData);\n  const questions = stepData.questions;\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n  return (\n    <StyledQuiz>\n      {showScore ? (\n        <ScoreSection data-test=\"score\">\n          You scored {score} out of {questions.length}\n          <StyledSubmitButton\n            onClick={() => dispatch(setCurrentStep(currentStep + 1))}\n            data-test=\"next-step\"\n          >\n            Submit Quiz\n          </StyledSubmitButton>\n        </ScoreSection>\n      ) : (\n        <QuestionCard\n          currentQuestion={currentQuestion}\n          questions={questions}\n          handleAnswerOptionClick={handleAnswerOptionClick}\n        />\n      )}\n    </StyledQuiz>\n  );\n};\n\nconst StyledQuiz = styled.div`\n  background-color: ${Constants.COLOR.DARK_GREEN};\n  width: 90%;\n  min-height: 200px;\n  height: 90vh;\n  border-radius: 15px;\n  box-sizing: border-box;\n  padding: 20px;\n  box-shadow: 10px 10px 42px 0px rgba(0, 0, 0, 0.75);\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nconst ScoreSection = styled.div`\n  display: flex;\n  font-size: 24px;\n  align-items: center;\n  flex-direction: column;\n  align-self: center;\n`;\n\nconst QuestionSection = styled.div`\n  width: 100%;\n  position: relative;\n`;\n\nconst QuestionCount = styled.div`\n  margin-bottom: 20px;\n\n  span {\n    font-size: 40px;\n  }\n`;\n\nconst QuestionText = styled.div`\n  font-size: 50px;\n  margin-bottom: 12px;\n`;\n\nconst AnswerSection = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst AnswerButton = styled.button`\n  width: 100%;\n  font-size: 35px;\n  background-color: ${Constants.COLOR.LIGHT_GREEN};\n  border-radius: 15px;\n  display: flex;\n  padding: 20px;\n  justify-content: flex-start;\n  align-items: center;\n  border: 5px solid ${Constants.COLOR.DARK_GREEN};\n  cursor: pointer;\n  margin: 10px 0px;\n`;\n\nconst StyledSubmitButton = styled(Button)`\n  font-size: 25px;\n  height: 70px;\n  padding: 0 5px;\n  margin-top: 30px;\n  min-width: 120px;\n  background-color: ${Constants.COLOR.GREEN};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport default Quiz;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { selectCurrentStep } from \"../../../app/module/selectors\";\nimport Quiz from \"../../../components/Template/Quiz\";\n\nconst ModuleQuiz = () => {\n  const dispatch = useDispatch();\n  const currentStep = useSelector(selectCurrentStep);\n\n  return (\n    <Body>\n      <Quiz />\n    </Body>\n  );\n};\n\nconst Body = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default ModuleQuiz;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  selectCurrentStep,\n  selectCurrentStepData,\n  selectSelectedModule,\n} from \"../../../app/module/selectors\";\nimport { setCurrentStep } from \"../../../app/module/actions\";\nimport { Constants } from \"../../../data/constants\";\nimport Button from \"../../../components/Template/Button\";\nimport homepageSplash from \"../../../images/Homepage/homepage-splash.png\";\nimport ProgressBar from \"../../../components/Student/ProgressBar\";\n\nconst ModuleVideo = () => {\n  const dispatch = useDispatch();\n  const currentStep = useSelector(selectCurrentStep);\n  const stepData = useSelector(selectCurrentStepData);\n  const module = useSelector(selectSelectedModule);\n\n  return (\n    <Body>\n      <StyledTitle>This is the {module.title} Video Page</StyledTitle>\n      <Video\n        frameborder=\"0\"\n        src={`${stepData}`}\n        allow={\"autoplay;\"}\n        sandbox=\"allow-scripts allow-same-origin\"\n        allowFullScreen\n      />\n      <ProgressBar />\n      <StyledButtonContainer>\n        <StyledSubmitButton\n          onClick={() => dispatch(setCurrentStep(currentStep + 1))}\n          data-test=\"next-step\"\n        >\n          Next Step\n        </StyledSubmitButton>\n      </StyledButtonContainer>\n    </Body>\n  );\n};\n\nconst Body = styled.div`\n  display: flex;\n  justify-content: flex-center;\n  flex-direction: column;\n  width: 100vw;\n  height: 100vh;\n  background: url(${homepageSplash}) no-repeat;\n  background-size: 100vw 90vh;\n  background-position: 30vw 0;\n`;\n\nconst Video = styled.iframe`\n  width: 80vw;\n  height: 80vh;\n  margin: 0% 10%;\n  box-shadow: 0 4% 4% rgba(0, 0, 0, 0.25);\n  margin-bottom: 40px;\n`;\n\nconst StyledTitle = styled.p`\n  color: ${Constants.COLOR.GREEN};\n  line-height: 36px;\n  font-size: 30px;\n  padding-left: 30px;\n`;\n\nconst StyledButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  margin: 30px;\n`;\n\nconst StyledSubmitButton = styled(Button)`\n  font-size: 14px;\n  padding: 5px;\n  min-width: 120px;\n  background-color: ${Constants.COLOR.DARK_GREEN};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport default ModuleVideo;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  selectCurrentStep,\n  selectSelectedModule,\n} from \"../../../app/module/selectors\";\nimport Main from \"../../../layouts/Main\";\nimport ModuleSummary from \"./ModuleSummary\";\nimport ModuleText from \"./ModuleText\";\nimport ModuleQuiz from \"./ModuleQuiz\";\nimport ModuleVideo from \"./ModuleVideo\";\nimport { useHistory } from \"react-router\";\n\nconst Module = () => {\n  const history = useHistory();\n  const currentModule = useSelector(selectSelectedModule);\n  const currentStep = useSelector(selectCurrentStep);\n  const currentStepData =\n    currentStep === -1 ? undefined : currentModule?.steps[currentStep];\n\n  const StepPage = () => {\n    const stepType = currentStepData.type;\n    if (stepType === \"text\") {\n      return <ModuleText />;\n    } else if (stepType === \"video\") {\n      return <ModuleVideo />;\n    } else if (stepType === \"quiz\") {\n      return <ModuleQuiz />;\n    }\n    history.push(\"/student/home\");\n    return;\n  };\n\n  return (\n    <Main title={currentModule?.title} description={\"Module Page\"}>\n      <ModuleWrapper>\n        {currentStep === -1 && <ModuleSummary />}\n        {currentStepData && StepPage()}\n        {currentStep >= currentModule?.steps?.length &&\n          history.push(\"/student/home\")}\n      </ModuleWrapper>\n    </Main>\n  );\n};\n\nconst ModuleWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport default Module;\n","import { Constants } from \"../../data/constants\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.div`\n  background-color: ${Constants.COLOR.LIGHT_GREEN};\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  color: white;\n  font-weight: bold;\n  &:hover {\n    filter: brightness(110%);\n    cursor: pointer;\n  }\n`;\n\nexport default StyledButton;\n","export const setCurrentStep = (step) => {\n  return {\n    type: \"SET_CURRENT_STEP\",\n    payload: step,\n  };\n};\n\nexport const setSelectedModule = (moduleToAdd) => {\n  return {\n    type: \"SET_SELECTED_MODULE\",\n    payload: moduleToAdd,\n  };\n};\n\nexport const addStep = (step) => {\n  return {\n    type: \"ADD_STEP\",\n    payload: step,\n  };\n};\n\nexport const setSteps = (steps) => {\n  return {\n    type: \"SET_STEPS\",\n    payload: steps,\n  };\n};\n\nexport const setTitle = (title) => {\n  return {\n    type: \"SET_TITLE\",\n    payload: title,\n  };\n};\n\nexport const setDescription = (description) => {\n  return {\n    type: \"SET_DESCRIPTION\",\n    payload: description,\n  };\n};\n","export default __webpack_public_path__ + \"static/media/homepage-splash.82706964.png\";","export default __webpack_public_path__ + \"static/media/homepage-splash-2.df6b84b2.png\";","import styled from \"styled-components\";\nimport { Constants } from \"../../data/constants\";\n\nconst QuestionCard = (props) => {\n  return (\n    <>\n      <QuestionSection>\n        <QuestionCount>\n          <span>Question {props.currentQuestion + 1}</span>/\n          {props.questions.length}\n        </QuestionCount>\n        <QuestionText data-test=\"question-text\">\n          {props.questions[props.currentQuestion].questionText}\n        </QuestionText>\n      </QuestionSection>\n      <AnswerSection>\n        {props.questions[props.currentQuestion].answerOptions.map(\n          (answerOption) => {\n            return (\n              <AnswerButton\n                onClick={() =>\n                  !props.inEdit\n                    ? props.handleAnswerOptionClick(answerOption.isCorrect)\n                    : undefined\n                }\n                style={{\n                  height: `${\n                    100 /\n                    props.questions[props.currentQuestion].answerOptions.length\n                  }%`,\n                }}\n                key={props.questions[\n                  props.currentQuestion\n                ].answerOptions.indexOf(answerOption)}\n                data-test=\"answer-text\"\n              >\n                {answerOption.answerText}\n              </AnswerButton>\n            );\n          }\n        )}\n      </AnswerSection>\n    </>\n  );\n};\n\nconst QuestionSection = styled.div`\n  width: 100%;\n  position: relative;\n`;\n\nconst QuestionCount = styled.div`\n  margin-bottom: 20px;\n\n  span {\n    font-size: 40px;\n  }\n`;\n\nconst QuestionText = styled.div`\n  font-size: 50px;\n  margin-bottom: 12px;\n`;\n\nconst AnswerSection = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst AnswerButton = styled.button`\n  width: 100%;\n  font-size: 35px;\n  background-color: ${Constants.COLOR.LIGHT_GREEN};\n  border-radius: 15px;\n  display: flex;\n  padding: 20px;\n  justify-content: flex-start;\n  align-items: center;\n  border: 5px solid ${Constants.COLOR.DARK_GREEN};\n  cursor: pointer;\n  margin: 10px 0px;\n`;\n\nexport default QuestionCard;\n"],"sourceRoot":""}